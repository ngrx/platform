# This file configures the build at https://circleci.com/gh/ngrx/platform

# Opt-in to newer CircleCI system
# Complete documentation is at https://circleci.com/docs/2.0/
version: 2.1

# Note: YAML anchors allow an object to be re-used, reducing duplication.
# The ampersand declares an alias for an object, then later the `<<: *name`
# syntax dereferences it.
# See https://blog.daemonl.com/2016/02/yaml.html
# To validate changes, use an online parser, eg.
# https://yaml-online-parser.appspot.com/
var_1: &cache_key yarn-cache-{{ checksum "yarn.lock" }}-0.14.1
var_2: &run_in_node
  docker:
    - image: cimg/node:14.17.0
var_5: &run_in_browser
  docker:
    - image: cimg/node:14.17.0-browsers

orbs:
  browser-tools: circleci/browser-tools@1.3.0

commands:
  write_master_hash:
    steps:
      - run: git remote add upstream git@github.com:ngrx/platform.git
      - run: git fetch upstream master
      - run: git log --format='%h' -n 1 upstream/master > ~/project/master.txt

jobs:
  install:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key
      - run: yarn --frozen-lockfile --non-interactive
      - save_cache:
          key: *cache_key
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - node_modules

  lint:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key

      # Test
      - run:
          name: Run All Lint Checks
          command: yarn nx run-many --target=lint --all --parallel=1

  lint-affected:
    <<: *run_in_node
    steps:
      - checkout

      - restore_cache:
          keys:
            - *cache_key

      # Build and Test
      - write_master_hash
      - run:
          name: Run Affected Lint Checks
          command: yarn nx affected:lint --base=$(cat ~/project/master.txt) --head=$CIRCLE_SHA1 --parallel=1

  test:
    <<: *run_in_browser
    steps:
      - browser-tools/install-browser-tools
      - checkout
      - run: |
          node --version
          google-chrome --version

      - restore_cache:
          keys:
            - *cache_key

      # Test
      - run:
          name: Run All Unit Tests
          command: yarn nx run-many --target=test --all --parallel=1

  test-affected:
    <<: *run_in_browser
    steps:
      - checkout

      - restore_cache:
          keys:
            - *cache_key

      # Build and Test
      - write_master_hash
      - run:
          name: Run Affected Unit Tests
          command: yarn nx affected:test --base=$(cat ~/project/master.txt) --head=$CIRCLE_SHA1 --parallel=1

  build:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key

      # Build
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export NX_CLOUD_AUTH_TOKEN=$NX_CLOUD_TOKEN' >> $BASH_ENV
            source $BASH_ENV
      - run: yarn
      - run:
          name: Build All Release Packages
          command: yarn build --parallel --skip-nx-cache
      # Store artifacts from packages build
      - persist_to_workspace:
          root: dist
          paths:
            - modules/*
      # Store artifacts from docs build
      - persist_to_workspace:
          root: projects/ngrx.io/dist
          paths:
            - ngrx.io/*

  build-affected:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key

      # Build
      - run: yarn
      - write_master_hash
      - run:
          name: Run Affected Builds
          command: yarn nx affected --target=build --base=$(cat ~/project/master.txt) --head=$CIRCLE_SHA1 --with-deps

  schematics-core-check:
    <<: *run_in_browser
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key
      - run: yarn copy:schematics
      - run:
          name: Check schematics-core for consistency
          command: yarn schematics:check

  e2e-affected:
    <<: *run_in_browser
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key
      - run: yarn
      - write_master_hash
      - run:
          name: Run Affected E2E Tests
          command: yarn nx affected --target=e2e --base=$(cat ~/project/master.txt) --head=$CIRCLE_SHA1 --parallel --exclude=docs-app

  deploy:
    <<: *run_in_node
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'c9:c2:b4:5e:13:23:b6:6d:d8:29:3e:68:c6:40:9c:ec'
      - checkout
      - restore_cache:
          keys:
            - *cache_key
      - attach_workspace:
          at: dist
      - run:
          name: Deploy Rolling Release Builds
          command: yarn run deploy:builds

  publish-stable:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key
      - attach_workspace:
          at: dist
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
      - run:
          name: Publish stable to npm
          command: ./node_modules/.bin/ts-node ./build/publish-stable.ts

  publish-next:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - *cache_key
      - attach_workspace:
          at: dist
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
      - run:
          name: Publish next to npm
          command: ./node_modules/.bin/ts-node ./build/publish-next.ts

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - install
          filters:
            branches:
              only: master
            tags:
              only: /.*/
      - lint-affected:
          requires:
            - install
          filters:
            branches:
              ignore: master
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      # - test-affected:
      #     requires:
      #       - install
      #     filters:
      #       branches:
      #         ignore: master
      - build:
          requires:
            - install
          filters:
            branches:
              only: master
            tags:
              only: /.*/
      - build-affected:
          requires:
            - install
          filters:
            branches:
              ignore: master
      - e2e-affected:
          requires:
            - install
          filters:
            branches:
              ignore: master
      - schematics-core-check:
          requires:
            - install
          filters:
            branches:
              ignore: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - publish-stable:
          requires:
            - build
          filters:
            tags:
              only: /9\.\d+\.\d+(?!-\w+\.\d)/
            branches:
              ignore: /.*/
      - publish-next:
          requires:
            - build
          filters:
            tags:
              only: /10\.\d+\.\d+(-\w+\.\d)/
            branches:
              ignore: /.*/
