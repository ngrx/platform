# This file configures the build at https://circleci.com/gh/ngrx/platform

# Opt-in to newer CircleCI system
# Complete documentation is at https://circleci.com/docs/2.0/
version: 2

# Note: YAML anchors allow an object to be re-used, reducing duplication.
# The ampersand declares an alias for an object, then later the `<<: *name`
# syntax dereferences it.
# See https://blog.daemonl.com/2016/02/yaml.html
# To validate changes, use an online parser, eg.
# https://yaml-online-parser.appspot.com/
var_1: &cache_key yarn-cache-{{ checksum "yarn.lock" }}-0.12.4
var_2: &run_in_node
  docker:
    - image: circleci/node:12.9.1
var_3: &set_bazel_options
  run:
    command: sudo cp .circleci/bazel.rc /etc/bazel.bazelrc
var_4: &docs_cache_key yarn-docs-cache-{{ checksum "~/docs/projects/ngrx.io/yarn.lock" }}-0.3
var_5: &run_in_browser
  docker:
    - image: circleci/node:12.9.1-browsers
var_6: &docs_in_node
  docker:
    - image: circleci/node:10.16
var_7: &docs_in_browser
  docker:
    - image: circleci/node:10.13-browsers

jobs:
  install:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run: yarn --frozen-lockfile --non-interactive
      - save_cache:
          key: *cache_key
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - node_modules

  # Enforce some static analysis invariants.
  # Note that generally, these should be checked only on the delta in each change,
  # otherwise any change to the static analysis config requires updating all the
  # code in the repo.
  # Also analyzing everything makes the lint job slow.
  lint:
    <<: *run_in_node
    steps:
      - checkout
      - *set_bazel_options
      - restore_cache:
          key: *cache_key

      # Run the Buildifier to check our Bazel rules for format issues.
      - run: 'yarn bazel:format --mode=check ||
          (echo "BUILD files not formatted. Please run ''yarn bazel:format --mode=fix''" ; exit 1)'

      # Run the Buildifier to check our Bazel rules for lint issues.
      # Note: The `--lint=warn` will auto fixe (re-write) the affected files.
      - run: 'yarn bazel:format --lint=warn ||
          (echo "BUILD files contain unresolved lint errors. Please fix manually the remaining errors." ; exit 1)'

  test:
    <<: *run_in_node
    steps:
      - checkout
      - *set_bazel_options

      - restore_cache:
          key: *cache_key

      # Build and Test
      - run: yarn test --maxWorkers=1 --ci

  build:
    <<: *run_in_node
    steps:
      - checkout
      - *set_bazel_options

      - restore_cache:
          key: *cache_key

      # Build
      - run: ./node_modules/.bin/bazel build //modules/...
      # Store artifacts from build
      - persist_to_workspace:
          root: dist
          paths:
            - bin/*
      - save_cache:
          key: *cache_key
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
            - node_modules

  schematics-core-check:
    <<: *run_in_browser
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run: yarn copy:schematics
      - run: git diff --name-only --exit-code ./modules

  example-e2e-tests:
    <<: *run_in_browser
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run: yarn run example:build:prod
      - run: yarn run example:cypress:ci

  docs-tests:
    <<: *docs_in_browser
    working_directory: ~/docs/projects/ngrx.io
    steps:
      - checkout:
          path: ~/docs
      - restore_cache:
          key: *docs_cache_key
      - run: yarn test --watch=false

  docs:
    <<: *docs_in_node
    working_directory: ~/docs/projects/ngrx.io
    steps:
      - checkout:
          path: ~/docs
      - restore_cache:
          key: *docs_cache_key
      - run: yarn setup
      - run: npm rebuild node-sass
      - run: yarn build-for next --progress false && yarn copy-404-page
      - run: cp -rf src/extra-files/next/. dist/ngrx.io/
      # Store artifacts from build
      - persist_to_workspace:
          root: ~/docs/projects/ngrx.io/dist
          paths:
            - ngrx.io/*
      - save_cache:
          key: *docs_cache_key
          paths:
            - ~/docs/projects/ngrx.io/node_modules

  docs-preview:
    <<: *docs_in_node
    working_directory: ~/docs/projects/ngrx.io
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c9:c2:b4:5e:13:23:b6:6d:d8:29:3e:68:c6:40:9c:ec"
      - checkout:
          path: ~/docs
      - restore_cache:
          keys:
            - *cache_key
            - *docs_cache_key
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export CI_PREVIEW=true' >> $BASH_ENV
            echo 'export SHORT_GIT_HASH=$(git rev-parse --short $CIRCLE_SHA1)' >> $BASH_ENV
            echo 'export CIRCLE_PULL_REQUEST_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | cut -d"/" -f7)' >> $BASH_ENV
            source $BASH_ENV
      - run: npm rebuild node-sass
      - run: yarn build-for next --progress false --base-href /pr$CIRCLE_PULL_REQUEST_NUMBER-$SHORT_GIT_HASH/ --output-path dist/ngrx.io/pr$CIRCLE_PULL_REQUEST_NUMBER-$SHORT_GIT_HASH/ && yarn copy-404-page
      - run: cp -rf src/extra-files/next/. dist/ngrx.io/pr$CIRCLE_PULL_REQUEST_NUMBER-$SHORT_GIT_HASH/
      - run: yarn --cwd ../../ install --ignore-engines && yarn --cwd ../../ run deploy:preview
      - save_cache:
          key: *docs_cache_key
          paths:
            - ~/docs/projects/ngrx.io/node_modules

  deploy-docs-stable:
    <<: *docs_in_node
    working_directory: ~/docs/projects/ngrx.io
    steps:
      - checkout:
          path: ~/docs
      - restore_cache:
          keys:
            - *cache_key
            - *docs_cache_key
      - run: npm rebuild node-sass
      - run: yarn build --progress false --output-path dist/ngrx.io/ && yarn copy-404-page
      - run: cp -rf src/extra-files/stable/. dist/ngrx.io/
      - run:
          name: Deploy Docs to Firebase
          command: ./node_modules/.bin/firebase deploy --only hosting:stable --token=$FIREBASE_DEPLOY_TOKEN

  deploy:
    <<: *run_in_node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c9:c2:b4:5e:13:23:b6:6d:d8:29:3e:68:c6:40:9c:ec"
      - checkout
      - restore_cache:
          key: *cache_key
      - attach_workspace:
          at: dist
      - run: yarn run deploy:builds

  publish-stable:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - attach_workspace:
          at: dist
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish stable to npm
          command: ./node_modules/.bin/ts-node ./build/publish-stable.ts

  publish-next:
    <<: *run_in_node
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - attach_workspace:
          at: dist
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish next to npm
          command: ./node_modules/.bin/ts-node ./build/publish-next.ts

  cleanup-previews:
    <<: *run_in_node
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c9:c2:b4:5e:13:23:b6:6d:d8:29:3e:68:c6:40:9c:ec"
      - checkout
      - restore_cache:
          key: *cache_key
      - run: yarn run cleanup:previews

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test
      - example-e2e-tests:
          requires:
            - install
      - docs-tests:
          requires:
            - install
      - docs:
          requires:
            - install
      - docs-preview:
          requires:
            - install
      - schematics-core-check:
          requires:
            - install
      - deploy:
          requires:
            - docs
            - example-e2e-tests
            - docs-tests
            - build
          filters:
            branches:
              only: master
      - cleanup-previews:
          requires:
            - install
          filters:
            branches:
              only: master
      - publish-stable:
          requires:
            - build
          filters:
            tags:
              only: /9\.\d+\.\d+(?!-\w+\.\d)/
            branches:
              ignore: /.*/
      - deploy-docs-stable:
          requires:
            - build
          filters:
            tags:
              only: /9\.\d+\.\d+(?!-\w+\.\d)/
            branches:
              ignore: /.*/
      - publish-next:
          requires:
            - build
          filters:
            tags:
              only: /9\.\d+\.\d+(-\w+\.\d)/
            branches:
              ignore: /.*/
