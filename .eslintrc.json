{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    },
    {
      "files": ["*.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        // because we're using object
        "@typescript-eslint/ban-types": "warn",
        // because we have empty constructors for DI
        "@typescript-eslint/no-empty-function": "warn",
        "eqeqeq": ["off", "smart"],
        "id-blacklist": [
          "error",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
        ],
        "id-match": "error",
        "no-eval": "off",
        "no-redeclare": "off",
        "no-underscore-dangle": "off",
        "no-var": "error",
        "no-prototype-builtins": "off"
      },
      "plugins": ["eslint-plugin-import", "@typescript-eslint"]
    },
    {
      "files": ["*.html"],
      "rules": {}
    }
  ]
}
