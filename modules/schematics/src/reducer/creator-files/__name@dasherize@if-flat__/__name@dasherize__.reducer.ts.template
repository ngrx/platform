import { Action, createReducer, on } from '@ngrx/store';
<% if(feature) { %>import * as <%= classify(name) %>Actions from '<%= featurePath(group, flat, "actions", dasherize(name)) %><%= dasherize(name) %>.actions';<% } %>

export const <%= camelize(name) %>FeatureKey = '<%= camelize(name) %>';

export interface State {

}

export const initialState: State = {

};

const <%= camelize(name) %>Reducer = createReducer(
  initialState,
<% if(feature) { %>
  on(<%= classify(name) %>Actions.load<%= classify(name) %>s, state => state),
<% if(api) { %>  on(<%= classify(name) %>Actions.load<%= classify(name) %>sSuccess, (state, action) => state),
  on(<%= classify(name) %>Actions.load<%= classify(name) %>sFailure, (state, action) => state),
<% } %><% } %>
);

export function reducer(state: State | undefined, action: Action) {
  return <%= camelize(name) %>Reducer(state, action);
}
