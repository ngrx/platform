import {<% if(feature) { %> createFeature,<% } %> createReducer, on } from '@ngrx/store';
import { <%= classify(name) %>Actions } from '<%= featurePath(group, flat, "actions", dasherize(name)) %><%= dasherize(name) %>.actions';

export const <%= camelize(name) %>FeatureKey = '<%= camelize(name) %>';

export interface State {

}

export const initialState: State = {

};

export const reducer = createReducer(
  initialState,<% if(feature) { %>
  on(<%= classify(name) %>Actions.<%= prefix %><%= classify(name) %>s, state => state),
<% if(api) { %>  on(<%= classify(name) %>Actions.<%= prefix %><%= classify(name) %>sSuccess, (state, action) => state),
  on(<%= classify(name) %>Actions.<%= prefix %><%= classify(name) %>sFailure, (state, action) => state),<% } %><% } %>
);
<% if(feature) { %>
export const <%= camelize(name) %>Feature = createFeature({
  name: <%= camelize(name) %>FeatureKey,
  reducer,
});
<% } %>
