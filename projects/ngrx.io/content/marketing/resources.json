{
  "Community Resources": {
    "order": 1,
    "subCategories": {
      "Articles": {
        "order": 1,
        "resources": {
          "angular-in-depth": {
            "title": "Angular in Depth",
            "desc": "All articles in Angular in Depth tagged with NgRx",
            "url": "https://indepth.dev/search?query=ngrx",
            "rev": true
          },
          "ngrx-best-practices-for-enterprise-angular-applications": {
            "title": "NgRx — Best Practices for Enterprise Angular Applications",
            "desc": "Enterprise NgRx pattern for organizing store into modules and sub modules",
            "url": "https://wesleygrimes.com/angular/2018/05/30/ngrx-best-practices-for-enterprise-angular-applications",
            "rev": true
          }
        }
      },
      "Talks and videos": {
        "order": 2,
        "resources": {
          "ng-conf-2018": {
            "title": "NgRx at ng-conf 2018",
            "desc":
              "Playlist of all NgRx talks at ng-conf 2018 by Mike and Brandon",
            "url":
              "https://www.youtube.com/playlist?list=PL8OUS498tQP3FFsZzULTGnbyIcILFjHd3",
            "rev": true
          },
          "angular-connect-2018": {
            "title": "You might not need NgRx by Mike Ryan at AngularConnect 2018",
            "desc":
              "Mike Ryan talk about the benefits and complexity of NgRx, and introducing the SHARI principle",
            "url":
              "https://www.youtube.com/watch?v=omnwu_etHTY",
            "rev": true
          },
          "international-javascript-conference-london-2019": {
            "title": "State Management in Angular with NgRx Stores and Effects at iJS London 2019",
            "desc": "Overview of how to use NgRx stores and effects in an Angular application by Fabian Gosebrink",
            "url": "https://speakerdeck.com/fabiangosebrink/state-management-in-angular-with-ngrx-stores-and-effects",
            "rev": true
          }
        }
      },
      "Podcasts": {
        "order": 3,
        "resources": {
          "adventurues-in-angular-ngrx-tips-and-tricks": {
            "title":
              "Adventures in Angular: NgRx Tips & Tricks with Adrian Fâciu",
            "desc":
              "The panel talks to Adrian about his blog titled, “NgRx Tips & Tricks.” They ask Adrian in-depth questions about NgRx, among many other topics",
            "url":
              "https://devchat.tv/adv-in-angular/aia-214-ngrx-tips-tricks-with-adrian-faciu/",
            "rev": true
          }
        }
      },
      "Example projects": {
        "order": 4,
        "resources": {
          "angular-in-depth": {
            "title": "Angular, NgRx and Angular Material Starter",
            "desc": "A starter project created by Tomas Trajan",
            "url":
              "https://github.com/tomastrajan/angular-ngrx-material-starter",
            "rev": true
          },
          "alfresco-content-app": {
            "title": "Alfresco Content App",
            "desc": "An NgRx project used in production",
            "url": "https://github.com/Alfresco/alfresco-content-app",
            "rev": true
          },
          "angular-contacts-app-example": {
            "title": "Angular & NgRx Contact Book CRUD example app",
            "desc":
              "Angular CRUD Contacts App Example with NgRx Store and NgRx Effects",
            "url": "https://github.com/avatsaev/angular-contacts-app-example",
            "rev": true
          },
          "angular-checklist": {
            "title": "Angular Checklist",
            "desc": "Curated list of common mistakes made when developing Angular applications",
            "url": "https://angular-checklist.io",
            "rev": true
          },
          "online-training": {
            "title":
              "Online Training website using ASP.Net Core 2.0 & Angular 4",
            "url": "https://github.com/ngohungphuc/online-training",
            "rev": true
          },
          "redux-demo": {
            "title": "A small sample login app using Angular 6 and NgRx",
            "url":
              "https://github.com/ngohungphuc/Research/tree/master/Angular/Redux/ReduxDemo",
            "rev": true
          },
          "pizza-sync": {
            "title": "Pizza Sync",
            "desc":
              "Use a Pizza Provider of your choice and add/edit orders in real time with friends/colleagues",
            "url": "https://github.com/maxime1992/pizza-sync",
            "rev": true
          },
          "goose-weather": {
            "title": "Goose Weather",
            "desc":
              "Angular App that uses NOAA and the OpenWeatherMapAPI to create a weather forecast",
            "url": "https://github.com/andrewevans02/goose-weather",
            "rev": true
          },
          "mdb-angular-boilerplate": {
            "title": "MDB Angular Boilerplate",
            "desc":
              "Angular CRUD application starter with NgRx state management and Firebase backend",
            "url": "https://github.com/mdbootstrap/Angular-Bootstrap-Boilerplate",
            "rev": true
          },
          "sap-spartacus": {
            "title": "Spartacus",
            "desc":
              "Spartacus is a lean, Angular-based JavaScript storefront for SAP Commerce Cloud that communicates exclusively through the Commerce REST API.",
            "url": "https://github.com/SAP/cloud-commerce-spartacus-storefront",
            "rev": true
          },
          "todomvc-app": {
            "title": "TodoMVC app",
            "desc":
              "The TodoMVC app using NgRx",
            "url": "https://github.com/bbaia/todomvc-angular-ngrx",
            "rev": true
          }
        }
      },
      "Libraries": {
        "order": 5,
        "resources": {
          "@rx-mind/data-component-store": {
            "title": "@rx-mind/data-component-store",
            "desc": "ComponentStore with entity selectors, updaters, and effects",
            "url": "https://github.com/rx-mind/ngrx-plugins/tree/master/libs/data-component-store",
            "rev": true
          },
          "@rx-mind/entity-component-store": {
            "title": "@rx-mind/entity-component-store",
            "desc": "ComponentStore with entity selectors and updaters",
            "url": "https://github.com/rx-mind/ngrx-plugins/tree/master/libs/entity-component-store",
            "rev": true
          },
          "eslint-plugin-ngrx": {
            "title": "eslint-plugin-ngrx",
            "desc": "ESLint plugin for NgRx",
            "url": "https://github.com/timdeschryver/eslint-plugin-ngrx",
            "rev": true
          },
          "ngrx-child-selectors": {
            "title": "ngrx-child-selectors",
            "desc": "A plugin for easy creation of child selectors",
            "url": "https://github.com/markostanimirovic/ngrx-child-selectors",
            "rev": true
          },
          "ngrx-entity-relationship": {
            "title": "ngrx-entity-relationship",
            "desc": "A simple ORM library for selecting entities with their relationships which supports @ngrx/store, @ngrx/entity and @ngrx/data",
            "url": "https://github.com/satanTime/ngrx-entity-relationship",
            "rev": true
          },
          "ngrx-enums": {
            "title": "ngrx-enums",
            "desc":
              "A small library that provides the base classes for implementing ngrx actions and reducers with ts-enums",
            "url": "https://github.com/LMFinney/ngrx-enums",
            "rev": true
          },
          "ngrx-ducks": {
            "title": "ngrx-ducks",
            "desc":
              "A plugin for NgRx creating dynamic store facades",
              "url": "https://co-it.gitbook.io/ngrx-ducks/",
              "rev": true
          },
          "ngrx-handlers": {
            "title": "ngrx-handlers",
            "desc": "A plugin for generating actions and reducer based on the handler map",
            "url": "https://github.com/markostanimirovic/ngrx-handlers",
            "rev": true
          },
          "ngrx-immer": {
            "title": "ngrx-immer",
            "desc": "Immer wrappers around NgRx methods createReducer, on, and ComponentStore",
            "url": "https://github.com/timdeschryver/ngrx-immer",
            "rev": true
          },
          "ngrx-lite": {
            "title": "ngrx-lite",
            "desc": "A wrapper around NgRx ComponentStore with some Benefits",
            "url": "https://github.com/gernsdorfer/ngrx-lite",
            "rev": true
          },
          "ngrx-slice": {
            "title": "ngrx-slice",
            "desc": "createSlice for NgRx",
            "url": "https://github.com/nartc/ngrx-slice",
            "rev": true
          },
          "ngrx-wieder": {
            "title": "ngrx-wieder",
            "desc": "Lightweight & configurable solution for implementing undo-redo based on NgRx and immer",
            "url": "https://github.com/nilsmehlhorn/ngrx-wieder",
            "rev": true
          }
        }
      }
    }
  },
  "Education": {
    "order": 2,
    "subCategories": {
      "Online courses": {
        "order": 1,
        "resources": {
          "ultimate-courses-ngrxstore-effects": {
            "title": "Ultimate Angular (Todd Motto)",
            "desc": "NGRX Store + Effects",
            "url": "https://ultimatecourses.com/learn/ngrx-store-effects",
            "rev": true
          },
          "pluralsight-getting-started": {
            "title": "Pluralsight (Deborah Kurata and Duncan Hunter)",
            "desc": "Angular NgRx: Getting Started",
            "url":
              "https://www.pluralsight.com/courses/angular-ngrx-getting-started",
            "rev": true
          }
        }
      },
      "Books": {
        "order": 2,
        "resources": {
          "ngrx-reactive-state-management-book": {
            "title": "NgRx: Reactive State Management for Angular (Nils Mehlhorn)",
            "desc": "Comprehensive learning resource with step-by-step example app",
            "url": "https://gumroad.com/l/angular-ngrx-book",
            "rev": "true"
          }
        }
      }
    }
  }
}
