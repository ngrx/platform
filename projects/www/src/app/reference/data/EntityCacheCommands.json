{"name":"EntityCacheCommands","canonicalReference":"@ngrx/data!EntityCacheCommands:interface","kind":"Interface","fileUrlPath":"../../dist/modules/data/src/dispatchers/entity-commands.d.ts","isDeprecated":false,"members":[{"kind":"Interface","canonicalReference":"@ngrx/data!EntityCacheCommands:interface","docComment":"/**\n * * A collection's cache-only commands, which do not update remote storage **\n */\n","excerptTokens":[{"kind":"Content","text":"export interface EntityCacheCommands<T> "}],"fileUrlPath":"../../dist/modules/data/src/dispatchers/entity-commands.d.ts","releaseTag":"Public","typeParameters":[{"typeParameterName":"T","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"name":"EntityCacheCommands","preserveMemberOrder":false,"members":[{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#addAllToCache:member(1)","docComment":"/**\n * Replace all entities in the cached collection. Does not save to remote storage.\n *\n * @param entities - to add directly to cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"addAllToCache(entities: "},{"kind":"Content","text":"T[]"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entities","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"addAllToCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Replace all entities in the cached collection. Does not save to remote storage.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entities","description":"to add directly to cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#addManyToCache:member(1)","docComment":"/**\n * Add multiple new entities directly to the cache. Does not save to remote storage. Entities with primary keys already in cache are ignored.\n *\n * @param entities - to add directly to cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"addManyToCache(entities: "},{"kind":"Content","text":"T[]"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entities","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"addManyToCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Add multiple new entities directly to the cache. Does not save to remote storage. Entities with primary keys already in cache are ignored.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entities","description":"to add directly to cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#addOneToCache:member(1)","docComment":"/**\n * Add a new entity directly to the cache. Does not save to remote storage. Ignored if an entity with the same primary key is already in cache.\n *\n * @param entity - to add directly to cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"addOneToCache(entity: "},{"kind":"Content","text":"T"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entity","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"addOneToCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Add a new entity directly to the cache. Does not save to remote storage. Ignored if an entity with the same primary key is already in cache.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entity","description":"to add directly to cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#clearCache:member(1)","docComment":"/**\n * Clear the cached entity collection\n */\n","excerptTokens":[{"kind":"Content","text":"clearCache(options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":3,"endIndex":4},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"options","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":true}],"name":"clearCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Clear the cached entity collection\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#removeManyFromCache:member(1)","docComment":"/**\n * Remove multiple entities directly from the cache. Does not delete these entities from remote storage.\n *\n * @param entity - The entities to remove\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"removeManyFromCache(entities: "},{"kind":"Content","text":"T[]"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entities","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"removeManyFromCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Remove multiple entities directly from the cache. Does not delete these entities from remote storage.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entity","description":"The entities to remove\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#removeManyFromCache:member(2)","docComment":"/**\n * Remove multiple entities directly from the cache. Does not delete these entities from remote storage.\n *\n * @param keys - The primary keys of the entities to remove\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"removeManyFromCache(keys: "},{"kind":"Content","text":"(number | string)[]"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":2,"parameters":[{"parameterName":"keys","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"removeManyFromCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Remove multiple entities directly from the cache. Does not delete these entities from remote storage.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"keys","description":"The primary keys of the entities to remove\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#removeOneFromCache:member(1)","docComment":"/**\n * Remove an entity directly from the cache. Does not delete that entity from remote storage.\n *\n * @param entity - The entity to remove\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"removeOneFromCache(entity: "},{"kind":"Content","text":"T"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entity","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"removeOneFromCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Remove an entity directly from the cache. Does not delete that entity from remote storage.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entity","description":"The entity to remove\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#removeOneFromCache:member(2)","docComment":"/**\n * Remove an entity directly from the cache. Does not delete that entity from remote storage.\n *\n * @param key - The primary key of the entity to remove\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"removeOneFromCache(key: "},{"kind":"Content","text":"number | string"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":2,"parameters":[{"parameterName":"key","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"removeOneFromCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Remove an entity directly from the cache. Does not delete that entity from remote storage.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"key","description":"The primary key of the entity to remove\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#setFilter:member(1)","docComment":"/**\n * Set the pattern that the collection's filter applies when using the `filteredEntities` selector.\n */\n","excerptTokens":[{"kind":"Content","text":"setFilter(pattern: "},{"kind":"Content","text":"any"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"pattern","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"setFilter","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Set the pattern that the collection's filter applies when using the `filteredEntities` selector.\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#setLoaded:member(1)","docComment":"/**\n * Set the loaded flag\n */\n","excerptTokens":[{"kind":"Content","text":"setLoaded(isLoaded: "},{"kind":"Content","text":"boolean"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"isLoaded","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"setLoaded","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Set the loaded flag\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#setLoading:member(1)","docComment":"/**\n * Set the loading flag\n */\n","excerptTokens":[{"kind":"Content","text":"setLoading(isLoading: "},{"kind":"Content","text":"boolean"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"isLoading","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":true}],"name":"setLoading","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Set the loading flag\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#updateManyInCache:member(1)","docComment":"/**\n * Update multiple cached entities directly. Does not update these entities in remote storage. Entities whose primary keys are not in cache are ignored. Update entities may be partial but must at least have their keys. such partial entities patch their cached counterparts.\n *\n * @param entities - to update directly in cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"updateManyInCache(entities: "},{"kind":"Reference","text":"Partial","canonicalReference":"!Partial:type"},{"kind":"Content","text":"<T>[]"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":7},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entities","parameterTypeTokenRange":{"startIndex":1,"endIndex":3},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":true}],"name":"updateManyInCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Update multiple cached entities directly. Does not update these entities in remote storage. Entities whose primary keys are not in cache are ignored. Update entities may be partial but must at least have their keys. such partial entities patch their cached counterparts.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entities","description":"to update directly in cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#updateOneInCache:member(1)","docComment":"/**\n * Update a cached entity directly. Does not update that entity in remote storage. Ignored if an entity with matching primary key is not in cache. The update entity may be partial (but must have its key) in which case it patches the existing entity.\n *\n * @param entity - to update directly in cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"updateOneInCache(entity: "},{"kind":"Reference","text":"Partial","canonicalReference":"!Partial:type"},{"kind":"Content","text":"<T>"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":7},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entity","parameterTypeTokenRange":{"startIndex":1,"endIndex":3},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":true}],"name":"updateOneInCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Update a cached entity directly. Does not update that entity in remote storage. Ignored if an entity with matching primary key is not in cache. The update entity may be partial (but must have its key) in which case it patches the existing entity.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entity","description":"to update directly in cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#upsertManyInCache:member(1)","docComment":"/**\n * Insert or update multiple cached entities directly. Does not save to remote storage. Upsert entities might be partial but must at least have their keys. Pass an array of the Update<T> structure as the payload.\n *\n * @param entities - to upsert directly in cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"upsertManyInCache(entities: "},{"kind":"Reference","text":"Partial","canonicalReference":"!Partial:type"},{"kind":"Content","text":"<T>[]"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":7},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entities","parameterTypeTokenRange":{"startIndex":1,"endIndex":3},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":true}],"name":"upsertManyInCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Insert or update multiple cached entities directly. Does not save to remote storage. Upsert entities might be partial but must at least have their keys. Pass an array of the Update<T> structure as the payload.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entities","description":"to upsert directly in cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}},{"kind":"MethodSignature","canonicalReference":"@ngrx/data!EntityCacheCommands#upsertOneInCache:member(1)","docComment":"/**\n * Insert or update a cached entity directly. Does not save to remote storage. Upsert entity might be a partial of T but must at least have its key. Pass the Update<T> structure as the payload.\n *\n * @param entity - to upsert directly in cache.\n *\n * @param options - options such as mergeStrategy\n */\n","excerptTokens":[{"kind":"Content","text":"upsertOneInCache(entity: "},{"kind":"Reference","text":"Partial","canonicalReference":"!Partial:type"},{"kind":"Content","text":"<T>"},{"kind":"Content","text":", options?: "},{"kind":"Reference","text":"EntityActionOptions","canonicalReference":"@ngrx/data!EntityActionOptions:interface"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":7},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"entity","parameterTypeTokenRange":{"startIndex":1,"endIndex":3},"isOptional":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":true}],"name":"upsertOneInCache","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Insert or update a cached entity directly. Does not save to remote storage. Upsert entity might be a partial of T but must at least have its key. Pass the Update<T> structure as the payload.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entity","description":"to upsert directly in cache.\n\n"},{"name":"options","description":"options such as mergeStrategy\n"}]}}],"extendsTokenRanges":[],"docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"* A collection's cache-only commands, which do not update remote storage **\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}}]}