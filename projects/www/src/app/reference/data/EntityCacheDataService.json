{
  "name": "EntityCacheDataService",
  "canonicalReference": "@ngrx/data!EntityCacheDataService:class",
  "kind": "Class",
  "fileUrlPath": "../../dist/modules/data/src/dataservices/entity-cache-data.service.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Class",
      "canonicalReference": "@ngrx/data!EntityCacheDataService:class",
      "docComment": "/**\n * Default data service for making remote service calls targeting the entire EntityCache. See EntityDataService for services that target a single EntityCollection\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare class EntityCacheDataService "
        }
      ],
      "fileUrlPath": "../../dist/modules/data/src/dataservices/entity-cache-data.service.d.ts",
      "releaseTag": "Public",
      "isAbstract": false,
      "name": "EntityCacheDataService",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Constructor",
          "canonicalReference": "@ngrx/data!EntityCacheDataService:constructor(1)",
          "docComment": "/**\n * Constructs a new instance of the `EntityCacheDataService` class\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "constructor(entityDefinitionService: "
            },
            {
              "kind": "Reference",
              "text": "EntityDefinitionService",
              "canonicalReference": "@ngrx/data!EntityDefinitionService:class"
            },
            { "kind": "Content", "text": ", http: " },
            {
              "kind": "Reference",
              "text": "HttpClient",
              "canonicalReference": "@angular/common!HttpClient:class"
            },
            { "kind": "Content", "text": ", config?: " },
            {
              "kind": "Reference",
              "text": "DefaultDataServiceConfig",
              "canonicalReference": "@ngrx/data!DefaultDataServiceConfig:class"
            },
            { "kind": "Content", "text": ");" }
          ],
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "entityDefinitionService",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            },
            {
              "parameterName": "http",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "isOptional": false
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": { "startIndex": 5, "endIndex": 6 },
              "isOptional": true
            }
          ],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Constructs a new instance of the `EntityCacheDataService` class\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#entityDefinitionService:member",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected entityDefinitionService: "
            },
            {
              "kind": "Reference",
              "text": "EntityDefinitionService",
              "canonicalReference": "@ngrx/data!EntityDefinitionService:class"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "entityDefinitionService",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#filterChangeSet:member(1)",
          "docComment": "/**\n * Filter changeSet to remove unwanted ChangeSetItems. This implementation excludes null and empty ChangeSetItems.\n *\n * @param changeSet - ChangeSet with changes to filter\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected filterChangeSet(changeSet: "
            },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "changeSet",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "filterChangeSet",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Filter changeSet to remove unwanted ChangeSetItems. This implementation excludes null and empty ChangeSetItems.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "changeSet",
                "description": "ChangeSet with changes to filter\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#flattenUpdates:member(1)",
          "docComment": "/**\n * Convert the entities in update changes from  @ngrx Update<T> structure to just T. Reverse of restoreUpdates().\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected flattenUpdates(changeSet: "
            },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "changeSet",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "flattenUpdates",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Convert the entities in update changes from  @ngrx Update<T> structure to just T. Reverse of restoreUpdates().\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#getIdSelector:member(1)",
          "docComment": "/**\n * Get the id (primary key) selector function for an entity type\n *\n * @param entityName - name of the entity type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected getIdSelector(entityName: "
            },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "IdSelector",
              "canonicalReference": "@ngrx/entity!IdSelector:type"
            },
            { "kind": "Content", "text": "<any>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "entityName",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "getIdSelector",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Get the id (primary key) selector function for an entity type\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "entityName",
                "description": "name of the entity type\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#handleError:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected handleError(reqData: " },
            {
              "kind": "Reference",
              "text": "RequestData",
              "canonicalReference": "@ngrx/data!RequestData:interface"
            },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "(err: any) => " },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            { "kind": "Content", "text": "<never>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "reqData",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "handleError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#http:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected http: " },
            {
              "kind": "Reference",
              "text": "HttpClient",
              "canonicalReference": "@angular/common!HttpClient:class"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "http",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#idSelectors:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected idSelectors: " },
            { "kind": "Content", "text": "{\n        [entityName: string]: " },
            {
              "kind": "Reference",
              "text": "IdSelector",
              "canonicalReference": "@ngrx/entity!IdSelector:type"
            },
            { "kind": "Content", "text": "<any>;\n    }" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "idSelectors",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 4 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#restoreUpdates:member(1)",
          "docComment": "/**\n * Convert the flattened T entities in update changes back to  @ngrx Update<T> structures. Reverse of flattenUpdates().\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected restoreUpdates(changeSet: "
            },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "changeSet",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "restoreUpdates",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Convert the flattened T entities in update changes back to  @ngrx Update<T> structures. Reverse of flattenUpdates().\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#saveDelay:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected saveDelay: " },
            { "kind": "Content", "text": "number" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "saveDelay",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#saveEntities:member(1)",
          "docComment": "/**\n * Save changes to multiple entities across one or more entity collections. Server endpoint must understand the essential SaveEntities protocol, in particular the ChangeSet interface (except for Update<T>). This implementation extracts the entity changes from a ChangeSet Update<T>[] and sends those. It then reconstructs Update<T>[] in the returned observable result.\n *\n * @param changeSet - An array of SaveEntityItems. Each SaveEntityItem describe a change operation for one or more entities of a single collection, known by its 'entityName'.\n *\n * @param url - The server endpoint that receives this request.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "saveEntities(changeSet: " },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": ", url: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "ChangeSet",
              "canonicalReference": "@ngrx/data!ChangeSet:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 5, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "changeSet",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            },
            {
              "parameterName": "url",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveEntities",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save changes to multiple entities across one or more entity collections. Server endpoint must understand the essential SaveEntities protocol, in particular the ChangeSet interface (except for Update<T>). This implementation extracts the entity changes from a ChangeSet Update<T>[] and sends those. It then reconstructs Update<T>[] in the returned observable result.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "changeSet",
                "description": "An array of SaveEntityItems. Each SaveEntityItem describe a change operation for one or more entities of a single collection, known by its 'entityName'.\n\n"
              },
              {
                "name": "url",
                "description": "The server endpoint that receives this request.\n"
              }
            ]
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCacheDataService#timeout:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected timeout: " },
            { "kind": "Content", "text": "number" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "timeout",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        }
      ],
      "implementsTokenRanges": [],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Default data service for making remote service calls targeting the entire EntityCache. See EntityDataService for services that target a single EntityCollection\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": []
      }
    }
  ]
}
