{
  "name": "EntityCollectionReducerMethods",
  "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods:class",
  "kind": "Class",
  "fileUrlPath": "../../dist/modules/data/src/reducers/entity-collection-reducer-methods.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Class",
      "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods:class",
      "docComment": "/**\n * Base implementation of reducer methods for an entity collection.\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare class EntityCollectionReducerMethods<T> "
        }
      ],
      "fileUrlPath": "../../dist/modules/data/src/reducers/entity-collection-reducer-methods.d.ts",
      "releaseTag": "Public",
      "typeParameters": [
        {
          "typeParameterName": "T",
          "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "isAbstract": false,
      "name": "EntityCollectionReducerMethods",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Constructor",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods:constructor(1)",
          "docComment": "/**\n * Constructs a new instance of the `EntityCollectionReducerMethods` class\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "constructor(entityName: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ", definition: " },
            {
              "kind": "Reference",
              "text": "EntityDefinition",
              "canonicalReference": "@ngrx/data!EntityDefinition:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", entityChangeTracker?: " },
            {
              "kind": "Reference",
              "text": "EntityChangeTracker",
              "canonicalReference": "@ngrx/data!EntityChangeTracker:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ");" }
          ],
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "entityName",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            },
            {
              "parameterName": "definition",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "isOptional": false
            },
            {
              "parameterName": "entityChangeTracker",
              "parameterTypeTokenRange": { "startIndex": 6, "endIndex": 8 },
              "isOptional": true
            }
          ],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Constructs a new instance of the `EntityCollectionReducerMethods` class\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#adapter:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected adapter: " },
            {
              "kind": "Reference",
              "text": "EntityAdapter",
              "canonicalReference": "@ngrx/entity!EntityAdapter:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "adapter",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#addAll:member(1)",
          "docComment": "/**\n * Replaces all entities in the collection Sets loaded flag to true. Merges query results, preserving unsaved changes\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "protected addAll(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "addAll",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Replaces all entities in the collection Sets loaded flag to true. Merges query results, preserving unsaved changes\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#addMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected addMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "addMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#addOne:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected addOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "addOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#cancelPersist:member(1)",
          "docComment": "/**\n * Cancel a persistence operation\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected cancelPersist(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "cancelPersist",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Cancel a persistence operation\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#commitAll:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected commitAll(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "commitAll",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#commitMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected commitMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "commitMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#commitOne:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected commitOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "commitOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#definition:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "definition: " },
            {
              "kind": "Reference",
              "text": "EntityDefinition",
              "canonicalReference": "@ngrx/data!EntityDefinition:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "definition",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "isStatic": false,
          "isProtected": false,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#entityChangeTracker:member",
          "docComment": "/**\n * Track changes to entities since the last query or save Can revert some or all of those changes\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "entityChangeTracker: " },
            {
              "kind": "Reference",
              "text": "EntityChangeTracker",
              "canonicalReference": "@ngrx/data!EntityChangeTracker:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "entityChangeTracker",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "isStatic": false,
          "isProtected": false,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Track changes to entities since the last query or save Can revert some or all of those changes\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#entityName:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "entityName: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "entityName",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isStatic": false,
          "isProtected": false,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#extractData:member(1)",
          "docComment": "/**\n * Safely extract data from the EntityAction payload\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "protected extractData<D = " },
            { "kind": "Content", "text": "any" },
            { "kind": "Content", "text": ">(action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<D>" },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "D" },
            { "kind": "Content", "text": ";" }
          ],
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 1, "endIndex": 2 }
            }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 6, "endIndex": 7 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "extractData",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Safely extract data from the EntityAction payload\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#extractMergeStrategy:member(1)",
          "docComment": "/**\n * Safely extract MergeStrategy from EntityAction. Set to IgnoreChanges if collection itself is not tracked.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected extractMergeStrategy(action: "
            },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "MergeStrategy",
              "canonicalReference": "@ngrx/data!MergeStrategy:enum"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "extractMergeStrategy",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Safely extract MergeStrategy from EntityAction. Set to IgnoreChanges if collection itself is not tracked.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#guard:member",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected guard: " },
            {
              "kind": "Reference",
              "text": "EntityActionGuard",
              "canonicalReference": "@ngrx/data!EntityActionGuard:class"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "guard",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#isChangeTracking:member",
          "docComment": "/**\n * True if this collection tracks unsaved changes\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "protected isChangeTracking: " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "isChangeTracking",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "True if this collection tracks unsaved changes\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#isOptimistic:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected isOptimistic(action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "isOptimistic",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#methods:member",
          "docComment": "/**\n * Dictionary of the {EntityCollectionReducerMethods} for this entity type, keyed by the {EntityOp}\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "readonly methods: " },
            {
              "kind": "Reference",
              "text": "EntityCollectionReducerMethodMap",
              "canonicalReference": "@ngrx/data!EntityCollectionReducerMethodMap:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": true,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "methods",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "isStatic": false,
          "isProtected": false,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Dictionary of the {EntityCollectionReducerMethods} for this entity type, keyed by the {EntityOp}\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryAll:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected queryAll(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryAll",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryAllError:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryAllError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryAllError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryAllSuccess:member(1)",
          "docComment": "/**\n * Merges query results per the MergeStrategy Sets loading flag to false and loaded flag to true.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryAllSuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryAllSuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Merges query results per the MergeStrategy Sets loading flag to false and loaded flag to true.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryByKey:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected queryByKey(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<number | string>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryByKey",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryByKeyError:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryByKeyError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryByKeyError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryByKeySuccess:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryByKeySuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryByKeySuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryLoad:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected queryLoad(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryLoad",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryLoadError:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryLoadError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryLoadError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryLoadSuccess:member(1)",
          "docComment": "/**\n * Replaces all entities in the collection Sets loaded flag to true, loading flag to false, and clears changeState for the entire collection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryLoadSuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryLoadSuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Replaces all entities in the collection Sets loaded flag to true, loading flag to false, and clears changeState for the entire collection.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected queryMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 6, "endIndex": 8 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 5 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryManyError:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryManyError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryManyError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#queryManySuccess:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected queryManySuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "queryManySuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#removeAll:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected removeAll(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "removeAll",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#removeMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected removeMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<number[] | string[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "removeMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#removeOne:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected removeOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<number | string>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "removeOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveAddMany:member(1)",
          "docComment": "/**\n * Save multiple new entities. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add immediately.\n *\n * @param collection - The collection to which the entities should be added.\n *\n * @param action - The action payload holds options, including whether the save is optimistic, and the data, which must be an array of entities. If saving optimistically, the entities must have their keys.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "protected saveAddMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveAddMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save multiple new entities. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add immediately.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to which the entities should be added.\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including whether the save is optimistic, and the data, which must be an array of entities. If saving optimistically, the entities must have their keys.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveAddManyError:member(1)",
          "docComment": "/**\n * Attempt to save new entities failed or timed-out. Action holds the error. If saved pessimistically, new entities are not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entities are in the collection and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveAddManyError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveAddManyError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to save new entities failed or timed-out. Action holds the error. If saved pessimistically, new entities are not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entities are in the collection and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveAddManySuccess:member(1)",
          "docComment": "/**\n * Successfully saved new entities to the server. If saved pessimistically, add the entities from the server to the collection. If saved optimistically, the added entities are already in the collection. However, the server might have set or modified other fields (e.g, concurrency field), and may even return additional new entities. Therefore, upsert the entities in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk. Note: saveAddManySuccess differs from saveAddOneSuccess when optimistic. saveAddOneSuccess updates (not upserts) with the lone entity from the server. There is no effect if the entity is not already in cache. saveAddManySuccess will add an entity if it is not found in cache.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveAddManySuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveAddManySuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully saved new entities to the server. If saved pessimistically, add the entities from the server to the collection. If saved optimistically, the added entities are already in the collection. However, the server might have set or modified other fields (e.g, concurrency field), and may even return additional new entities. Therefore, upsert the entities in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk. Note: saveAddManySuccess differs from saveAddOneSuccess when optimistic. saveAddOneSuccess updates (not upserts) with the lone entity from the server. There is no effect if the entity is not already in cache. saveAddManySuccess will add an entity if it is not found in cache.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveAddOne:member(1)",
          "docComment": "/**\n * Save a new entity. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add entity immediately.\n *\n * @param collection - The collection to which the entity should be added.\n *\n * @param action - The action payload holds options, including whether the save is optimistic, and the data, which must be an entity. If saving optimistically, the entity must have a key.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "protected saveAddOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveAddOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save a new entity. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add entity immediately.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to which the entity should be added.\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including whether the save is optimistic, and the data, which must be an entity. If saving optimistically, the entity must have a key.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveAddOneError:member(1)",
          "docComment": "/**\n * Attempt to save a new entity failed or timed-out. Action holds the error. If saved pessimistically, the entity is not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entity is in the collection and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveAddOneError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveAddOneError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to save a new entity failed or timed-out. Action holds the error. If saved pessimistically, the entity is not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entity is in the collection and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveAddOneSuccess:member(1)",
          "docComment": "/**\n * Successfully saved a new entity to the server. If saved pessimistically, add the entity from the server to the collection. If saved optimistically, the added entity is already in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entity in the collection with the returned value (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveAddOneSuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveAddOneSuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully saved a new entity to the server. If saved pessimistically, add the entity from the server to the collection. If saved optimistically, the added entity is already in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entity in the collection with the returned value (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveDeleteMany:member(1)",
          "docComment": "/**\n * Delete multiple entities from the server by key and remove them from the collection (if present). Removes unsaved new entities from the collection immediately but the id is still sent to the server for deletion even though the server will not find that entity. Therefore, the server must be willing to ignore a delete request for an entity it cannot find. An optimistic save removes existing entities from the collection immediately; a pessimistic save removes them after the server confirms successful delete.\n *\n * @param collection - Removes entities from this collection.\n *\n * @param action - The action payload holds options, including whether the save is optimistic, and the data, which must be an array of primary keys or entities with a key; this reducer extracts the key from the entity.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveDeleteMany(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<(number | string | T)[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveDeleteMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Delete multiple entities from the server by key and remove them from the collection (if present). Removes unsaved new entities from the collection immediately but the id is still sent to the server for deletion even though the server will not find that entity. Therefore, the server must be willing to ignore a delete request for an entity it cannot find. An optimistic save removes existing entities from the collection immediately; a pessimistic save removes them after the server confirms successful delete.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "Removes entities from this collection.\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including whether the save is optimistic, and the data, which must be an array of primary keys or entities with a key; this reducer extracts the key from the entity.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveDeleteManyError:member(1)",
          "docComment": "/**\n * Attempt to delete the entities on the server failed or timed-out. Action holds the error. If saved pessimistically, the entities could still be in the collection and you may not have to compensate for the error. If saved optimistically, the entities are not in the collection and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveDeleteManyError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveDeleteManyError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to delete the entities on the server failed or timed-out. Action holds the error. If saved pessimistically, the entities could still be in the collection and you may not have to compensate for the error. If saved optimistically, the entities are not in the collection and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveDeleteManySuccess:member(1)",
          "docComment": "/**\n * Successfully deleted entities on the server. The keys of the deleted entities are in the action payload data. If saved pessimistically, entities that are still in the collection will be removed. If saved optimistically, the entities have already been removed from the collection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveDeleteManySuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<(number | string)[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveDeleteManySuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully deleted entities on the server. The keys of the deleted entities are in the action payload data. If saved pessimistically, entities that are still in the collection will be removed. If saved optimistically, the entities have already been removed from the collection.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveDeleteOne:member(1)",
          "docComment": "/**\n * Delete an entity from the server by key and remove it from the collection (if present). If the entity is an unsaved new entity, remove it from the collection immediately and skip the server delete request. An optimistic save removes an existing entity from the collection immediately; a pessimistic save removes it after the server confirms successful delete.\n *\n * @param collection - Will remove the entity with this key from the collection.\n *\n * @param action - The action payload holds options, including whether the save is optimistic, and the data, which must be a primary key or an entity with a key; this reducer extracts the key from the entity.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveDeleteOne(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<number | string | T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveDeleteOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Delete an entity from the server by key and remove it from the collection (if present). If the entity is an unsaved new entity, remove it from the collection immediately and skip the server delete request. An optimistic save removes an existing entity from the collection immediately; a pessimistic save removes it after the server confirms successful delete.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "Will remove the entity with this key from the collection.\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including whether the save is optimistic, and the data, which must be a primary key or an entity with a key; this reducer extracts the key from the entity.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveDeleteOneError:member(1)",
          "docComment": "/**\n * Attempt to delete the entity on the server failed or timed-out. Action holds the error. If saved pessimistically, the entity could still be in the collection and you may not have to compensate for the error. If saved optimistically, the entity is not in the collection and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveDeleteOneError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveDeleteOneError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to delete the entity on the server failed or timed-out. Action holds the error. If saved pessimistically, the entity could still be in the collection and you may not have to compensate for the error. If saved optimistically, the entity is not in the collection and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveDeleteOneSuccess:member(1)",
          "docComment": "/**\n * Successfully deleted entity on the server. The key of the deleted entity is in the action payload data. If saved pessimistically, if the entity is still in the collection it will be removed. If saved optimistically, the entity has already been removed from the collection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveDeleteOneSuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<number | string>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveDeleteOneSuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully deleted entity on the server. The key of the deleted entity is in the action payload data. If saved pessimistically, if the entity is still in the collection it will be removed. If saved optimistically, the entity has already been removed from the collection.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpdateMany:member(1)",
          "docComment": "/**\n * Save updated entities. If saving pessimistically, update the entities in the collection after the server confirms success. If saving optimistically, update the entities immediately, before the save request.\n *\n * @param collection - The collection to update\n *\n * @param action - The action payload holds options, including if the save is optimistic, and the data which, must be an array of {Update<T>}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpdateMany(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@ngrx/entity!Update:type"
            },
            { "kind": "Content", "text": "<T>[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpdateMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save updated entities. If saving pessimistically, update the entities in the collection after the server confirms success. If saving optimistically, update the entities immediately, before the save request.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to update\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including if the save is optimistic, and the data which, must be an array of {Update<T>}.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpdateManyError:member(1)",
          "docComment": "/**\n * Attempt to update entities on the server failed or timed-out. Action holds the error. If saved pessimistically, the entities in the collection are in the pre-save state you may not have to compensate for the error. If saved optimistically, the entities in the collection were updated and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpdateManyError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpdateManyError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to update entities on the server failed or timed-out. Action holds the error. If saved pessimistically, the entities in the collection are in the pre-save state you may not have to compensate for the error. If saved optimistically, the entities in the collection were updated and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpdateManySuccess:member(1)",
          "docComment": "/**\n * Successfully saved the updated entities to the server. If saved pessimistically, the entities in the collection will be updated with data from the server. If saved optimistically, the entities in the collection were already updated. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entity in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic update to avoid this risk.\n *\n * @param collection - The collection to update\n *\n * @param action - The action payload holds options, including if the save is optimistic, and the data which, must be an array of UpdateResponse<T>. You must include an UpdateResponse for every Update sent to the server, even if the save was optimistic, to ensure that the change tracking is properly reset.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpdateManySuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "UpdateResponseData",
              "canonicalReference": "@ngrx/data!UpdateResponseData:interface"
            },
            { "kind": "Content", "text": "<T>[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpdateManySuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully saved the updated entities to the server. If saved pessimistically, the entities in the collection will be updated with data from the server. If saved optimistically, the entities in the collection were already updated. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entity in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic update to avoid this risk.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to update\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including if the save is optimistic, and the data which, must be an array of UpdateResponse<T>. You must include an UpdateResponse for every Update sent to the server, even if the save was optimistic, to ensure that the change tracking is properly reset.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpdateOne:member(1)",
          "docComment": "/**\n * Save an update to an existing entity. If saving pessimistically, update the entity in the collection after the server confirms success. If saving optimistically, update the entity immediately, before the save request.\n *\n * @param collection - The collection to update\n *\n * @param action - The action payload holds options, including if the save is optimistic, and the data which, must be an {Update<T>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpdateOne(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@ngrx/entity!Update:type"
            },
            { "kind": "Content", "text": "<T>>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpdateOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save an update to an existing entity. If saving pessimistically, update the entity in the collection after the server confirms success. If saving optimistically, update the entity immediately, before the save request.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to update\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including if the save is optimistic, and the data which, must be an {Update<T>}\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpdateOneError:member(1)",
          "docComment": "/**\n * Attempt to update the entity on the server failed or timed-out. Action holds the error. If saved pessimistically, the entity in the collection is in the pre-save state you may not have to compensate for the error. If saved optimistically, the entity in the collection was updated and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpdateOneError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpdateOneError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to update the entity on the server failed or timed-out. Action holds the error. If saved pessimistically, the entity in the collection is in the pre-save state you may not have to compensate for the error. If saved optimistically, the entity in the collection was updated and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpdateOneSuccess:member(1)",
          "docComment": "/**\n * Successfully saved the updated entity to the server. If saved pessimistically, update the entity in the collection with data from the server. If saved optimistically, the entity was already updated in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entity in the collection with the returned value (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic update to avoid this risk.\n *\n * @param collection - The collection to update\n *\n * @param action - The action payload holds options, including if the save is optimistic, and the update data which, must be an UpdateResponse<T> that corresponds to the Update sent to the server. You must include an UpdateResponse even if the save was optimistic, to ensure that the change tracking is properly reset.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpdateOneSuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "UpdateResponseData",
              "canonicalReference": "@ngrx/data!UpdateResponseData:interface"
            },
            { "kind": "Content", "text": "<T>>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpdateOneSuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully saved the updated entity to the server. If saved pessimistically, update the entity in the collection with data from the server. If saved optimistically, the entity was already updated in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entity in the collection with the returned value (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic update to avoid this risk.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to update\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including if the save is optimistic, and the update data which, must be an UpdateResponse<T> that corresponds to the Update sent to the server. You must include an UpdateResponse even if the save was optimistic, to ensure that the change tracking is properly reset.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpsertMany:member(1)",
          "docComment": "/**\n * Save multiple new or existing entities. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add immediately.\n *\n * @param collection - The collection to which the entities should be upserted.\n *\n * @param action - The action payload holds options, including whether the save is optimistic, and the data, which must be an array of whole entities. If saving optimistically, the entities must have their keys.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpsertMany(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpsertMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save multiple new or existing entities. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add immediately.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to which the entities should be upserted.\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including whether the save is optimistic, and the data, which must be an array of whole entities. If saving optimistically, the entities must have their keys.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpsertManyError:member(1)",
          "docComment": "/**\n * Attempt to save new or existing entities failed or timed-out. Action holds the error. If saved pessimistically, new entities are not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entities are in the collection and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpsertManyError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpsertManyError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to save new or existing entities failed or timed-out. Action holds the error. If saved pessimistically, new entities are not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entities are in the collection and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpsertManySuccess:member(1)",
          "docComment": "/**\n * Successfully saved new or existing entities to the server. If saved pessimistically, add the entities from the server to the collection. If saved optimistically, the added entities are already in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entities in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpsertManySuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpsertManySuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully saved new or existing entities to the server. If saved pessimistically, add the entities from the server to the collection. If saved optimistically, the added entities are already in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entities in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpsertOne:member(1)",
          "docComment": "/**\n * Save a new or existing entity. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add immediately.\n *\n * @param collection - The collection to which the entity should be upserted.\n *\n * @param action - The action payload holds options, including whether the save is optimistic, and the data, which must be a whole entity. If saving optimistically, the entity must have its key.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpsertOne(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpsertOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Save a new or existing entity. If saving pessimistically, delay adding to collection until server acknowledges success. If saving optimistically; add immediately.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "collection",
                "description": "The collection to which the entity should be upserted.\n\n"
              },
              {
                "name": "action",
                "description": "The action payload holds options, including whether the save is optimistic, and the data, which must be a whole entity. If saving optimistically, the entity must have its key.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpsertOneError:member(1)",
          "docComment": "/**\n * Attempt to save new or existing entity failed or timed-out. Action holds the error. If saved pessimistically, new or updated entity is not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entities are in the collection and you may need to compensate for the error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpsertOneError(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityActionDataServiceError",
              "canonicalReference": "@ngrx/data!EntityActionDataServiceError:interface"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpsertOneError",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Attempt to save new or existing entity failed or timed-out. Action holds the error. If saved pessimistically, new or updated entity is not in the collection and you may not have to compensate for the error. If saved optimistically, the unsaved entities are in the collection and you may need to compensate for the error.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#saveUpsertOneSuccess:member(1)",
          "docComment": "/**\n * Successfully saved new or existing entities to the server. If saved pessimistically, add the entities from the server to the collection. If saved optimistically, the added entities are already in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entities in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected saveUpsertOneSuccess(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "saveUpsertOneSuccess",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Successfully saved new or existing entities to the server. If saved pessimistically, add the entities from the server to the collection. If saved optimistically, the added entities are already in the collection. However, the server might have set or modified other fields (e.g, concurrency field) Therefore, update the entities in the collection with the returned values (if any) Caution: in a race, this update could overwrite unsaved user changes. Use pessimistic add to avoid this risk.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#selectId:member",
          "docComment": "/**\n * Extract the primary key (id); default to `id`\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "selectId: " },
            {
              "kind": "Reference",
              "text": "IdSelector",
              "canonicalReference": "@ngrx/entity!IdSelector:type"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "selectId",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "isStatic": false,
          "isProtected": false,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Extract the primary key (id); default to `id`\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setChangeState:member(1)",
          "docComment": "/**\n * Dangerous: Completely replace the collection's ChangeState. Use rarely and wisely.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected setChangeState(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "ChangeStateMap",
              "canonicalReference": "@ngrx/data!ChangeStateMap:type"
            },
            { "kind": "Content", "text": "<T>>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setChangeState",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Dangerous: Completely replace the collection's ChangeState. Use rarely and wisely.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setCollection:member(1)",
          "docComment": "/**\n * Dangerous: Completely replace the collection. Primarily for testing and rehydration from local storage. Use rarely and wisely.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected setCollection(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setCollection",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Dangerous: Completely replace the collection. Primarily for testing and rehydration from local storage. Use rarely and wisely.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setFilter:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected setFilter(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<any>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setFilter",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setLoaded:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected setLoaded(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<boolean>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setLoaded",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setLoading:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected setLoading(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<boolean>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setLoading",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setLoadingFalse:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected setLoadingFalse(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setLoadingFalse",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setLoadingFlag:member(1)",
          "docComment": "/**\n * Set the collection's loading flag\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected setLoadingFlag(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", loading: " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 6, "endIndex": 8 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "loading",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 5 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setLoadingFlag",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Set the collection's loading flag\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#setLoadingTrue:member(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "protected setLoadingTrue(collection: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "setLoadingTrue",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Property",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#toUpdate:member",
          "docComment": "/**\n * Convert an entity (or partial entity) into the `Update<T>` object `id`: the primary key and `changes`: the entity (or partial entity of changes).\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "protected toUpdate: " },
            { "kind": "Content", "text": "(entity: " },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            { "kind": "Content", "text": "<T>) => " },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@ngrx/entity!Update:type"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "toUpdate",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 6 },
          "isStatic": false,
          "isProtected": true,
          "isAbstract": false,
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Convert an entity (or partial entity) into the `Update<T>` object `id`: the primary key and `changes`: the entity (or partial entity of changes).\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#undoAll:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected undoAll(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "undoAll",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#undoMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected undoMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "undoMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#undoOne:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected undoOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "undoOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#updateMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected updateMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@ngrx/entity!Update:type"
            },
            { "kind": "Content", "text": "<T>[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "updateMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#updateOne:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected updateOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@ngrx/entity!Update:type"
            },
            { "kind": "Content", "text": "<T>>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "updateOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#upsertMany:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected upsertMany(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T[]>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "upsertMany",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntityCollectionReducerMethods#upsertOne:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "protected upsertOne(collection: " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ", action: " },
            {
              "kind": "Reference",
              "text": "EntityAction",
              "canonicalReference": "@ngrx/data!EntityAction:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "isProtected": true,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
              "isOptional": false
            },
            {
              "parameterName": "action",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "upsertOne",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        }
      ],
      "implementsTokenRanges": [],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Base implementation of reducer methods for an entity collection.\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": []
      }
    }
  ]
}
