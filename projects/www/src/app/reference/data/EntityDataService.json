{"name":"EntityDataService","canonicalReference":"@ngrx/data!EntityDataService:class","kind":"Class","fileUrlPath":"../../dist/modules/data/src/dataservices/entity-data.service.d.ts","isDeprecated":false,"members":[{"kind":"Class","canonicalReference":"@ngrx/data!EntityDataService:class","docComment":"/**\n * Registry of EntityCollection data services that make REST-like CRUD calls to entity collection endpoints.\n */\n","excerptTokens":[{"kind":"Content","text":"export declare class EntityDataService "}],"fileUrlPath":"../../dist/modules/data/src/dataservices/entity-data.service.d.ts","releaseTag":"Public","isAbstract":false,"name":"EntityDataService","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@ngrx/data!EntityDataService:constructor(1)","docComment":"/**\n * Constructs a new instance of the `EntityDataService` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor(defaultDataServiceFactory: "},{"kind":"Reference","text":"DefaultDataServiceFactory","canonicalReference":"@ngrx/data!DefaultDataServiceFactory:class"},{"kind":"Content","text":");"}],"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"defaultDataServiceFactory","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false}],"docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Constructs a new instance of the `EntityDataService` class\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}},{"kind":"Property","canonicalReference":"@ngrx/data!EntityDataService#defaultDataServiceFactory:member","docComment":"","excerptTokens":[{"kind":"Content","text":"protected defaultDataServiceFactory: "},{"kind":"Reference","text":"DefaultDataServiceFactory","canonicalReference":"@ngrx/data!DefaultDataServiceFactory:class"},{"kind":"Content","text":";"}],"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"defaultDataServiceFactory","propertyTypeTokenRange":{"startIndex":1,"endIndex":2},"isStatic":false,"isProtected":true,"isAbstract":false,"docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}},{"kind":"Method","canonicalReference":"@ngrx/data!EntityDataService#getService:member(1)","docComment":"/**\n * Get (or create) a data service for entity type\n *\n * @param entityName - the name of the type\n *\n * Examples: getService('Hero'); // data service for Heroes, untyped getService<Hero>('Hero'); // data service for Heroes, typed as Hero\n */\n","excerptTokens":[{"kind":"Content","text":"getService<T>(entityName: "},{"kind":"Content","text":"string"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"EntityCollectionDataService","canonicalReference":"@ngrx/data!EntityCollectionDataService:interface"},{"kind":"Content","text":"<T>"},{"kind":"Content","text":";"}],"typeParameters":[{"typeParameterName":"T","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":3,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"entityName","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false}],"isOptional":false,"isAbstract":false,"name":"getService","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Get (or create) a data service for entity type\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entityName","description":"the name of the type\n\nExamples: getService('Hero'); // data service for Heroes, untyped getService<Hero>('Hero'); // data service for Heroes, typed as Hero\n"}]}},{"kind":"Method","canonicalReference":"@ngrx/data!EntityDataService#registerService:member(1)","docComment":"/**\n * Register an EntityCollectionDataService for an entity type\n *\n * @param entityName - the name of the entity type\n *\n * @param service - data service for that entity type\n *\n * Examples: registerService('Hero', myHeroDataService); registerService('Villain', myVillainDataService);\n */\n","excerptTokens":[{"kind":"Content","text":"registerService<T>(entityName: "},{"kind":"Content","text":"string"},{"kind":"Content","text":", service: "},{"kind":"Reference","text":"EntityCollectionDataService","canonicalReference":"@ngrx/data!EntityCollectionDataService:interface"},{"kind":"Content","text":"<T>"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"typeParameters":[{"typeParameterName":"T","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":7},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"entityName","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":false},{"parameterName":"service","parameterTypeTokenRange":{"startIndex":3,"endIndex":5},"isOptional":false}],"isOptional":false,"isAbstract":false,"name":"registerService","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Register an EntityCollectionDataService for an entity type\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"entityName","description":"the name of the entity type\n\n"},{"name":"service","description":"data service for that entity type\n\nExamples: registerService('Hero', myHeroDataService); registerService('Villain', myVillainDataService);\n"}]}},{"kind":"Method","canonicalReference":"@ngrx/data!EntityDataService#registerServices:member(1)","docComment":"/**\n * Register a batch of data services.\n *\n * @param services - data services to merge into existing services\n *\n * Examples: registerServices({ Hero: myHeroDataService, Villain: myVillainDataService });\n */\n","excerptTokens":[{"kind":"Content","text":"registerServices(services: "},{"kind":"Content","text":"{\n        [name: string]: "},{"kind":"Reference","text":"EntityCollectionDataService","canonicalReference":"@ngrx/data!EntityCollectionDataService:interface"},{"kind":"Content","text":"<any>;\n    }"},{"kind":"Content","text":"): "},{"kind":"Content","text":"void"},{"kind":"Content","text":";"}],"isStatic":false,"returnTypeTokenRange":{"startIndex":5,"endIndex":6},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"services","parameterTypeTokenRange":{"startIndex":1,"endIndex":4},"isOptional":false}],"isOptional":false,"isAbstract":false,"name":"registerServices","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Register a batch of data services.\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[{"name":"services","description":"data services to merge into existing services\n\nExamples: registerServices({ Hero: myHeroDataService, Villain: myVillainDataService });\n"}]}},{"kind":"Property","canonicalReference":"@ngrx/data!EntityDataService#services:member","docComment":"","excerptTokens":[{"kind":"Content","text":"protected services: "},{"kind":"Content","text":"{\n        [name: string]: "},{"kind":"Reference","text":"EntityCollectionDataService","canonicalReference":"@ngrx/data!EntityCollectionDataService:interface"},{"kind":"Content","text":"<any>;\n    }"},{"kind":"Content","text":";"}],"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"services","propertyTypeTokenRange":{"startIndex":1,"endIndex":4},"isStatic":false,"isProtected":true,"isAbstract":false,"docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}}],"implementsTokenRanges":[],"docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Registry of EntityCollection data services that make REST-like CRUD calls to entity collection endpoints.\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}}]}