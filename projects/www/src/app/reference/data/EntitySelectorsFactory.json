{
  "name": "EntitySelectorsFactory",
  "canonicalReference": "@ngrx/data!EntitySelectorsFactory:class",
  "kind": "Class",
  "fileUrlPath": "../../dist/modules/data/src/selectors/entity-selectors.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Class",
      "canonicalReference": "@ngrx/data!EntitySelectorsFactory:class",
      "docComment": "/**\n * Creates EntitySelector functions for entity collections.\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare class EntitySelectorsFactory "
        }
      ],
      "fileUrlPath": "../../dist/modules/data/src/selectors/entity-selectors.d.ts",
      "releaseTag": "Public",
      "isAbstract": false,
      "name": "EntitySelectorsFactory",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Constructor",
          "canonicalReference": "@ngrx/data!EntitySelectorsFactory:constructor(1)",
          "docComment": "/**\n * Constructs a new instance of the `EntitySelectorsFactory` class\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "constructor(entityCollectionCreator?: "
            },
            {
              "kind": "Reference",
              "text": "EntityCollectionCreator",
              "canonicalReference": "@ngrx/data!EntityCollectionCreator:class"
            },
            { "kind": "Content", "text": ", selectEntityCache?: " },
            {
              "kind": "Reference",
              "text": "EntityCacheSelector",
              "canonicalReference": "@ngrx/data!EntityCacheSelector:type"
            },
            { "kind": "Content", "text": ");" }
          ],
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "entityCollectionCreator",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": true
            },
            {
              "parameterName": "selectEntityCache",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "isOptional": true
            }
          ],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Constructs a new instance of the `EntitySelectorsFactory` class\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": []
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntitySelectorsFactory#create:member(1)",
          "docComment": "/**\n * Creates the store-rooted selectors for an entity collection. {EntitySelectors$Factory} turns them into selectors$.\n *\n * @param metadata - EntityMetadata for the collection. May be partial but much have `entityName`.\n *\n * Based on ngrx/entity/state_selectors.ts Differs in that these selectors select from the NgRx store root, through the collection, to the collection members.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "create<T, S extends " },
            {
              "kind": "Reference",
              "text": "EntitySelectors",
              "canonicalReference": "@ngrx/data!EntitySelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "EntitySelectors",
              "canonicalReference": "@ngrx/data!EntitySelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ">(metadata: " },
            {
              "kind": "Reference",
              "text": "EntityMetadata",
              "canonicalReference": "@ngrx/data!EntityMetadata:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "S" },
            { "kind": "Content", "text": ";" }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            },
            {
              "typeParameterName": "S",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 3 },
              "defaultTypeTokenRange": { "startIndex": 4, "endIndex": 6 }
            }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 10, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "metadata",
              "parameterTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "create",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Creates the store-rooted selectors for an entity collection. {EntitySelectors$Factory} turns them into selectors$.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "metadata",
                "description": "EntityMetadata for the collection. May be partial but much have `entityName`.\n\nBased on ngrx/entity/state_selectors.ts Differs in that these selectors select from the NgRx store root, through the collection, to the collection members.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntitySelectorsFactory#create:member(2)",
          "docComment": "/**\n * Creates the default store-rooted selectors for an entity collection. {EntitySelectors$Factory} turns them into selectors$. Use the metadata overload for additional collection selectors.\n *\n * @param entityName - name of the entity type.\n *\n * Based on ngrx/entity/state_selectors.ts Differs in that these selectors select from the NgRx store root, through the collection, to the collection members.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "create<T, S extends " },
            {
              "kind": "Reference",
              "text": "EntitySelectors",
              "canonicalReference": "@ngrx/data!EntitySelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "EntitySelectors",
              "canonicalReference": "@ngrx/data!EntitySelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ">(entityName: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "S" },
            { "kind": "Content", "text": ";" }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            },
            {
              "typeParameterName": "S",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 3 },
              "defaultTypeTokenRange": { "startIndex": 4, "endIndex": 6 }
            }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 10 },
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "entityName",
              "parameterTypeTokenRange": { "startIndex": 7, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "create",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Creates the default store-rooted selectors for an entity collection. {EntitySelectors$Factory} turns them into selectors$. Use the metadata overload for additional collection selectors.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "entityName",
                "description": "name of the entity type.\n\nBased on ngrx/entity/state_selectors.ts Differs in that these selectors select from the NgRx store root, through the collection, to the collection members.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntitySelectorsFactory#createCollectionSelector:member(1)",
          "docComment": "/**\n * Create the NgRx selector from the store root to the named collection, e.g. from Object to Heroes.\n *\n * @param entityName - the name of the collection\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "createCollectionSelector<T = " },
            { "kind": "Content", "text": "any" },
            { "kind": "Content", "text": ", C extends " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "EntityCollection",
              "canonicalReference": "@ngrx/data!EntityCollection:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ">(entityName: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "MemoizedSelector",
              "canonicalReference": "@ngrx/store!MemoizedSelector:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Object",
              "canonicalReference": "!Object:interface"
            },
            { "kind": "Content", "text": ", C, (s1: " },
            {
              "kind": "Reference",
              "text": "EntityCache",
              "canonicalReference": "@ngrx/data!EntityCache:interface"
            },
            { "kind": "Content", "text": ") => C>" },
            { "kind": "Content", "text": ";" }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 1, "endIndex": 2 }
            },
            {
              "typeParameterName": "C",
              "constraintTokenRange": { "startIndex": 3, "endIndex": 5 },
              "defaultTypeTokenRange": { "startIndex": 6, "endIndex": 8 }
            }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 11, "endIndex": 17 },
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "entityName",
              "parameterTypeTokenRange": { "startIndex": 9, "endIndex": 10 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "createCollectionSelector",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Create the NgRx selector from the store root to the named collection, e.g. from Object to Heroes.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "entityName",
                "description": "the name of the collection\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntitySelectorsFactory#createCollectionSelectors:member(1)",
          "docComment": "/**\n * Creates entity collection selectors from metadata.\n *\n * @param metadata - EntityMetadata for the collection. May be partial but much have `entityName`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createCollectionSelectors<T, S extends "
            },
            {
              "kind": "Reference",
              "text": "CollectionSelectors",
              "canonicalReference": "@ngrx/data!CollectionSelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "CollectionSelectors",
              "canonicalReference": "@ngrx/data!CollectionSelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ">(metadata: " },
            {
              "kind": "Reference",
              "text": "EntityMetadata",
              "canonicalReference": "@ngrx/data!EntityMetadata:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "S" },
            { "kind": "Content", "text": ";" }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            },
            {
              "typeParameterName": "S",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 3 },
              "defaultTypeTokenRange": { "startIndex": 4, "endIndex": 6 }
            }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 10, "endIndex": 11 },
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "metadata",
              "parameterTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "createCollectionSelectors",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Creates entity collection selectors from metadata.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "metadata",
                "description": "EntityMetadata for the collection. May be partial but much have `entityName`.\n"
              }
            ]
          }
        },
        {
          "kind": "Method",
          "canonicalReference": "@ngrx/data!EntitySelectorsFactory#createCollectionSelectors:member(2)",
          "docComment": "/**\n * Creates default entity collection selectors for an entity type. Use the metadata overload for additional collection selectors.\n *\n * @param entityName - name of the entity type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createCollectionSelectors<T, S extends "
            },
            {
              "kind": "Reference",
              "text": "CollectionSelectors",
              "canonicalReference": "@ngrx/data!CollectionSelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "CollectionSelectors",
              "canonicalReference": "@ngrx/data!CollectionSelectors:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ">(entityName: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "S" },
            { "kind": "Content", "text": ";" }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            },
            {
              "typeParameterName": "S",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 3 },
              "defaultTypeTokenRange": { "startIndex": 4, "endIndex": 6 }
            }
          ],
          "isStatic": false,
          "returnTypeTokenRange": { "startIndex": 9, "endIndex": 10 },
          "releaseTag": "Public",
          "isProtected": false,
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "entityName",
              "parameterTypeTokenRange": { "startIndex": 7, "endIndex": 8 },
              "isOptional": false
            }
          ],
          "isOptional": false,
          "isAbstract": false,
          "name": "createCollectionSelectors",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Creates default entity collection selectors for an entity type. Use the metadata overload for additional collection selectors.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "entityName",
                "description": "name of the entity type\n"
              }
            ]
          }
        }
      ],
      "implementsTokenRanges": [],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Creates EntitySelector functions for entity collections.\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": []
      }
    }
  ]
}
