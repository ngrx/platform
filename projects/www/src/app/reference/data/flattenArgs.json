{"name":"flattenArgs","canonicalReference":"@ngrx/data!flattenArgs:function","kind":"Function","fileUrlPath":"../../dist/modules/data/src/utils/utilities.d.ts","isDeprecated":false,"members":[{"kind":"Function","canonicalReference":"@ngrx/data!flattenArgs:function(1)","docComment":"/**\n * Flatten first arg if it is an array Allows fn with ...rest signature to be called with an array instead of spread Example:\n * ```\n * // See entity-action-operators.ts\n * const persistOps = [EntityOp.QUERY_ALL, EntityOp.ADD, ...];\n * actions.pipe(ofEntityOp(...persistOps)) // works\n * actions.pipe(ofEntityOp(persistOps)) // also works\n * ```\n *\n */\n","excerptTokens":[{"kind":"Content","text":"export declare function flattenArgs<T>(args?: "},{"kind":"Content","text":"any[]"},{"kind":"Content","text":"): "},{"kind":"Content","text":"T[]"},{"kind":"Content","text":";"}],"fileUrlPath":"../../dist/modules/data/src/utils/utilities.d.ts","returnTypeTokenRange":{"startIndex":3,"endIndex":4},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"args","parameterTypeTokenRange":{"startIndex":1,"endIndex":2},"isOptional":true}],"typeParameters":[{"typeParameterName":"T","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"name":"flattenArgs","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":"Flatten first arg if it is an array Allows fn with ...rest signature to be called with an array instead of spread Example:\n```\n// See entity-action-operators.ts\nconst persistOps = [EntityOp.QUERY_ALL, EntityOp.ADD, ...];\nactions.pipe(ofEntityOp(...persistOps)) // works\nactions.pipe(ofEntityOp(persistOps)) // also works\n```\n\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}}]}