{"name":"OnIdentifyEffects","canonicalReference":"@ngrx/effects!OnIdentifyEffects:interface","kind":"Interface","fileUrlPath":"../../dist/modules/effects/src/lifecycle_hooks.d.ts","isDeprecated":false,"members":[{"kind":"Interface","canonicalReference":"@ngrx/effects!OnIdentifyEffects:interface","docComment":"/**\n * @description Interface to set an identifier for effect instances.\n *\n * By default, each Effects class is registered once regardless of how many times the Effect class is loaded. By implementing this interface, you define a unique identifier to register an Effects class instance multiple times.\n *\n * @usageNotes\n *\n * ### Set an identifier for an Effects class\n * ```ts\n * class EffectWithIdentifier implements OnIdentifyEffects {\n *  constructor(private effectIdentifier: string) {}\n *\n *  ngrxOnIdentifyEffects() {\n *    return this.effectIdentifier;\n *  }\n *\n * ```\n *\n */\n","excerptTokens":[{"kind":"Content","text":"export declare interface OnIdentifyEffects "}],"fileUrlPath":"../../dist/modules/effects/src/lifecycle_hooks.d.ts","releaseTag":"Public","name":"OnIdentifyEffects","preserveMemberOrder":false,"members":[{"kind":"MethodSignature","canonicalReference":"@ngrx/effects!OnIdentifyEffects#ngrxOnIdentifyEffects:member(1)","docComment":"/**\n * @description String identifier to differentiate effect instances.\n */\n","excerptTokens":[{"kind":"Content","text":"ngrxOnIdentifyEffects(): "},{"kind":"Content","text":"string"},{"kind":"Content","text":";"}],"isOptional":false,"returnTypeTokenRange":{"startIndex":1,"endIndex":2},"releaseTag":"Public","overloadIndex":1,"parameters":[],"name":"ngrxOnIdentifyEffects","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":" String identifier to differentiate effect instances.\n","usageNotes":"","remarks":"","deprecated":"","returns":"","see":[],"params":[]}}],"extendsTokenRanges":[],"docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":" Interface to set an identifier for effect instances.\n\nBy default, each Effects class is registered once regardless of how many times the Effect class is loaded. By implementing this interface, you define a unique identifier to register an Effects class instance multiple times.\n\n","usageNotes":"\n\n### Set an identifier for an Effects class\n```ts\nclass EffectWithIdentifier implements OnIdentifyEffects {\n constructor(private effectIdentifier: string) {}\n\n ngrxOnIdentifyEffects() {\n   return this.effectIdentifier;\n }\n\n```\n\n","remarks":"","deprecated":"","returns":"","see":[],"params":[]}}]}