{"name":"createActionGroup","canonicalReference":"@ngrx/store!createActionGroup:function","kind":"Function","fileUrlPath":"../../dist/modules/store/src/action_group_creator.d.ts","isDeprecated":false,"members":[{"kind":"Function","canonicalReference":"@ngrx/store!createActionGroup:function(1)","docComment":"/**\n * @description A function that creates a group of action creators with the same source.\n *\n * @param config - An object that contains a source and dictionary of events. An event is a key-value pair of an event name and event props.\n *\n * @returns A dictionary of action creators. The name of each action creator is created by camel casing the event name. The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n *\n */\n","excerptTokens":[{"kind":"Content","text":"export declare function createActionGroup<Source extends "},{"kind":"Content","text":"string"},{"kind":"Content","text":", Events extends "},{"kind":"Reference","text":"Record","canonicalReference":"!Record:type"},{"kind":"Content","text":"<string, "},{"kind":"Reference","text":"ActionCreatorProps","canonicalReference":"@ngrx/store!ActionCreatorProps:interface"},{"kind":"Content","text":"<unknown> | "},{"kind":"Reference","text":"Creator","canonicalReference":"@ngrx/store!Creator:type"},{"kind":"Content","text":">"},{"kind":"Content","text":">(config: "},{"kind":"Reference","text":"ActionGroupConfig","canonicalReference":"@ngrx/store!~ActionGroupConfig:interface"},{"kind":"Content","text":"<Source, Events>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"ActionGroup","canonicalReference":"@ngrx/store!~ActionGroup:type"},{"kind":"Content","text":"<Source, Events>"},{"kind":"Content","text":";"}],"fileUrlPath":"../../dist/modules/store/src/action_group_creator.d.ts","returnTypeTokenRange":{"startIndex":13,"endIndex":15},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"config","parameterTypeTokenRange":{"startIndex":10,"endIndex":12},"isOptional":false}],"typeParameters":[{"typeParameterName":"Source","constraintTokenRange":{"startIndex":1,"endIndex":2},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"Events","constraintTokenRange":{"startIndex":3,"endIndex":9},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"name":"createActionGroup","docs":{"modifiers":{"isInternal":false,"isPublic":false,"isAlpha":false,"isBeta":false,"isOverride":false,"isExperimental":false},"summary":" A function that creates a group of action creators with the same source.\n\n","usageNotes":"\n```ts\nconst authApiActions = createActionGroup({\n  source: 'Auth API',\n  events: {\n    // defining events with payload using the `props` function\n    'Login Success': props<{ userId: number; token: string }>(),\n    'Login Failure': props<{ error: string }>(),\n\n    // defining an event without payload using the `emptyProps` function\n    'Logout Success': emptyProps(),\n\n    // defining an event with payload using the props factory\n    'Logout Failure': (error: Error) => ({ error }),\n  },\n});\n\n// action type: \"[Auth API] Login Success\"\nauthApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n\n// action type: \"[Auth API] Login Failure\"\nauthApiActions.loginFailure({ error: 'Login Failure!' });\n\n// action type: \"[Auth API] Logout Success\"\nauthApiActions.logoutSuccess();\n\n// action type: \"[Auth API] Logout Failure\";\nauthApiActions.logoutFailure(new Error('Logout Failure!'));\n```\n\n","remarks":"","deprecated":"","returns":" A dictionary of action creators. The name of each action creator is created by camel casing the event name. The type of each action is created using the \"[Source] Event Name\" pattern.\n\n","see":[],"params":[{"name":"config","description":"An object that contains a source and dictionary of events. An event is a key-value pair of an event name and event props.\n\n"}]}}]}