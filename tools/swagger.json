{
	"openapi": "3.0.1",
	"info": {
		"title": "INNO-API :: T.R innovation API and pre production for RIS-API",
		"description": "T.R Reisendeninformationen innovation API and pre production for RIS-API.</br></br>For details on <b>INNO-API</b>: <a href=\"https://ri-wiki.com/x/CrHDAw\">https://ri-wiki.com/x/CrHDAw</a></br></br>For details on <b>RIS-API</b>: <a href=\"https://ri-wiki.com/x/q6GsBQ\">https://ri-wiki.com/x/q6GsBQ</a></br></br>Getting started:</br>Use code generation with <a href=\"https://github.com/OpenAPITools/openapi-generator\">openapi-generator</a> for the language of your desire.</br>for Java 11: <i>java -jar openapi-generator-cli-4.1.3.jar generate -g java -i swagger.yml --library native --api-package %TBD% --invoker-package %TBD% --model-package %TBD%</i>",
		"contact": {
			"name": "Tim Leiner",
			"email": "tim.leiner@deutschebahn.com"
		},
		"version": "2.15.2"
	},
	"servers": [
		{
			"url": "https://innoapi-k8s01-dev-fcd.reisenden.info/2.15"
		}
	],
	"security": [
		{
			"ApiKeyAuth": []
		}
	],
	"paths": {
		"/journeys/segmentbased/{journeyID}": {
			"get": {
				"tags": [
					"Journeys"
				],
				"description": "Returns a journey [Fahrtverlauf] with all its segments [Fahrtabschnitte], arrivals [Ankuenfte] and departures [Abfahrten] for the requested id. Segment based [Fahrtabschnittsbasiert] view.",
				"operationId": "journeySegmentbasedById",
				"parameters": [
					{
						"name": "journeyID",
						"in": "path",
						"description": "id of journey [FahrtID]",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "includeCanceled",
						"in": "query",
						"description": "include canceled arrivals / departures",
						"required": false,
						"schema": {
							"type": "boolean",
							"default": true
						}
					},
					{
						"name": "includeJourneyReferences",
						"in": "query",
						"description": "include journey references like relief [Entlastung], replace [Ersatz], continuation [Durchbindung], travelswith [Vereinigung / Fluegelung]",
						"required": false,
						"schema": {
							"type": "boolean",
							"default": false
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Cache-Control": {
								"description": "Controls whether and how long response can be cached by consumers, defaults to 'no-cache, no-store'.",
								"style": "simple",
								"schema": {
									"type": "string"
								}
							}
						},
						"content": {
							"application/vnd.de.db.ris+json": {
								"schema": {
									"$ref": "#/components/schemas/JourneySegmentBased"
								}
							}
						}
					},
					"500": {
						"description": "API Exception",
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/journeys/departures/byrelation": {
			"get": {
				"tags": [
					"Journeys"
				],
				"description": "Finds journey [Fahrt] departure [Abfahrt] by provided relation criterias [Fahrtrelation].",
				"operationId": "findDeparture",
				"parameters": [
					{
						"name": "date",
						"in": "query",
						"description": "date (yyyy-MM-dd) of scheduled start of journey [Verkehrstag]",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "number",
						"in": "query",
						"description": "number of transport [Fahrtnummer]",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "administrationID",
						"in": "query",
						"description": "administration [Verwaltung] id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "category",
						"in": "query",
						"description": "category of transport [Fahrtgattung]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "line",
						"in": "query",
						"description": "line of transport [Linie]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "evaNumber",
						"in": "query",
						"description": "departure station id [Haltestelle ID] for desired departure",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "timeSchedule",
						"in": "query",
						"description": "scheduled departure time [Geplante Abfahrtszeit] for desired departure as full qualified datetime (yyyy-MM-ddTHH:mm:ssZ)",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Cache-Control": {
								"description": "Controls whether and how long response can be cached by consumers, defaults to 'no-cache, no-store'.",
								"style": "simple",
								"schema": {
									"type": "string"
								}
							}
						},
						"content": {
							"application/vnd.de.db.ris+json": {
								"schema": {
									"$ref": "#/components/schemas/DepartureMatches"
								}
							}
						}
					},
					"500": {
						"description": "API Exception",
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/journeys/byrelation": {
			"get": {
				"tags": [
					"Journeys"
				],
				"description": "Finds journeys [Fahrten] by provided relation criterias [Fahrtrelation] (max of 100 matches are returned).",
				"operationId": "find",
				"parameters": [
					{
						"name": "date",
						"in": "query",
						"description": "date (yyyy-MM-dd) of scheduled start of journey [Verkehrstag], if omitted defaults to today",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "number",
						"in": "query",
						"description": "number of transport [Fahrtnummer]",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "administrationID",
						"in": "query",
						"description": "administration [Verwaltung] id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "originEvaNumber",
						"in": "query",
						"description": "scheduled origin station [Geplanter Starthalt]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "destinationEvaNumber",
						"in": "query",
						"description": "scheduled destination station [Geplanter Zielhalt]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "transports",
						"in": "query",
						"description": "transport types that should be returned, if ommitted all types of transport are returned",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/TransportType"
							}
						}
					},
					{
						"name": "category",
						"in": "query",
						"description": "category of transport [Fahrtgattung]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "line",
						"in": "query",
						"description": "line of transport [Linie]",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Cache-Control": {
								"description": "Controls whether and how long response can be cached by consumers, defaults to 'no-cache, no-store'.",
								"style": "simple",
								"schema": {
									"type": "string"
								}
							}
						},
						"content": {
							"application/vnd.de.db.ris+json": {
								"schema": {
									"$ref": "#/components/schemas/JourneyMatches"
								}
							}
						}
					},
					"500": {
						"description": "API Exception",
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/journeys/arrivals/byrelation": {
			"get": {
				"tags": [
					"Journeys"
				],
				"description": "Finds journey [Fahrt] arrival [Ankunft] by provided relation criterias [Fahrtrelation].",
				"operationId": "findArrival",
				"parameters": [
					{
						"name": "date",
						"in": "query",
						"description": "date (yyyy-MM-dd) of scheduled start of journey [Verkehrstag]",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "number",
						"in": "query",
						"description": "number of transport [Fahrtnummer]",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "administrationID",
						"in": "query",
						"description": "administration [Verwaltung] id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "category",
						"in": "query",
						"description": "category of transport [Fahrtgattung]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "line",
						"in": "query",
						"description": "line of transport [Linie]",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "evaNumber",
						"in": "query",
						"description": "arrival station id [Haltestelle ID] for desired departure",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "timeSchedule",
						"in": "query",
						"description": "scheduled arrival time [Geplante Ankunftszeit] for desired arrival as full qualified datetime (yyyy-MM-ddTHH:mm:ssZ)",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Cache-Control": {
								"description": "Controls whether and how long response can be cached by consumers, defaults to 'no-cache, no-store'.",
								"style": "simple",
								"schema": {
									"type": "string"
								}
							}
						},
						"content": {
							"application/vnd.de.db.ris+json": {
								"schema": {
									"$ref": "#/components/schemas/ArrivalMatches"
								}
							}
						}
					},
					"500": {
						"description": "API Exception",
						"content": {
							"application/problem+json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"ErrorDetail": {
				"required": [
					"detail",
					"field",
					"title"
				],
				"type": "object",
				"properties": {
					"errorCode": {
						"type": "integer",
						"description": "Unique code that identifies error.",
						"format": "int32"
					},
					"title": {
						"type": "string",
						"description": "Common description of error."
					},
					"field": {
						"type": "string",
						"description": "Name of field / element that raised the error."
					},
					"detail": {
						"type": "string",
						"description": "Detailed information for error."
					}
				},
				"description": "Detailed error information on field level."
			},
			"ErrorResponse": {
				"required": [
					"detail",
					"title"
				],
				"type": "object",
				"properties": {
					"errorCode": {
						"type": "integer",
						"description": "Unique code that identifies error.",
						"format": "int32"
					},
					"title": {
						"type": "string",
						"description": "Common description of error."
					},
					"detail": {
						"type": "string",
						"description": "Detailed information for error."
					},
					"status": {
						"type": "integer",
						"description": "Http status for error origin.",
						"format": "int32"
					},
					"instanceId": {
						"type": "string",
						"description": "Unique identifier for instance that raised the error."
					},
					"errors": {
						"type": "array",
						"description": "List of detailed errors in case multiple errors have lead to the surrounding error.",
						"items": {
							"$ref": "#/components/schemas/ErrorDetail"
						}
					}
				},
				"description": "API error object conforming to RFC7807."
			},
			"Administration": {
				"required": [
					"administrationID",
					"operatorCode",
					"operatorName"
				],
				"type": "object",
				"properties": {
					"administrationID": {
						"type": "string",
						"description": "Unique id of the administration [Verwaltung]."
					},
					"operatorCode": {
						"type": "string",
						"description": "Unique code of the operator [Betreiber]."
					},
					"operatorName": {
						"type": "string",
						"description": "Name of the operator [Betreiber]."
					}
				},
				"description": "Information on the operator [Betreiber] and the administration [Verwaltung] of the journey."
			},
			"Arrival": {
				"required": [
					"arrivalID",
					"messages",
					"passengerChange",
					"platform",
					"station",
					"time",
					"timeSchedule",
					"timeType"
				],
				"type": "object",
				"properties": {
					"station": {
						"$ref": "#/components/schemas/StationShort"
					},
					"passengerChange": {
						"type": "boolean",
						"description": "Indicates whether passengers are allowed to enter / leave [Fahrgastwechsel]."
					},
					"timeSchedule": {
						"type": "string",
						"description": "Scheduled time [Soll] of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"timeType": {
						"$ref": "#/components/schemas/TimeType"
					},
					"time": {
						"type": "string",
						"description": "Best known time information of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"platformSchedule": {
						"type": "string",
						"description": "Scheduled platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"platform": {
						"type": "string",
						"description": "Actual platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"messages": {
						"type": "array",
						"description": "List of messages [Freitexte] for journey at this particular stop [Freitexte].",
						"items": {
							"$ref": "#/components/schemas/Message"
						}
					},
					"disruptions": {
						"type": "array",
						"description": "List of disruptions [Stoerungsinformationen] for journey at this particular stop.",
						"items": {
							"$ref": "#/components/schemas/DisruptionCommunicationEmbedded"
						}
					},
					"arrivalID": {
						"type": "string",
						"description": "Unique id for arrival [AnkunftsID]."
					}
				},
				"description": "Information on journey arrival [Ankunft]."
			},
			"Departure": {
				"required": [
					"departureID",
					"messages",
					"passengerChange",
					"platform",
					"station",
					"time",
					"timeSchedule",
					"timeType"
				],
				"type": "object",
				"properties": {
					"station": {
						"$ref": "#/components/schemas/StationShort"
					},
					"passengerChange": {
						"type": "boolean",
						"description": "Indicates whether passengers are allowed to enter / leave [Fahrgastwechsel]."
					},
					"timeSchedule": {
						"type": "string",
						"description": "Scheduled time [Soll] of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"timeType": {
						"$ref": "#/components/schemas/TimeType"
					},
					"time": {
						"type": "string",
						"description": "Best known time information of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"platformSchedule": {
						"type": "string",
						"description": "Scheduled platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"platform": {
						"type": "string",
						"description": "Actual platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"messages": {
						"type": "array",
						"description": "List of messages [Freitexte] for journey at this particular stop [Freitexte].",
						"items": {
							"$ref": "#/components/schemas/Message"
						}
					},
					"disruptions": {
						"type": "array",
						"description": "List of disruptions [Stoerungsinformationen] for journey at this particular stop.",
						"items": {
							"$ref": "#/components/schemas/DisruptionCommunicationEmbedded"
						}
					},
					"departureID": {
						"type": "string",
						"description": "Unique id for departure [AbfahrtID]."
					}
				},
				"description": "Information on journey departure [Abfahrt]."
			},
			"DisruptionCommunicationDescription": {
				"required": [
					"text"
				],
				"type": "object",
				"properties": {
					"text": {
						"type": "string",
						"description": "Long text of disruption communication."
					},
					"textShort": {
						"type": "string",
						"description": "Optional short text of disruption communication."
					}
				},
				"description": "Disruption communication information [Stoerungskommunikation] descriptions."
			},
			"DisruptionCommunicationEmbedded": {
				"required": [
					"descriptions",
					"disruptionID"
				],
				"type": "object",
				"properties": {
					"disruptionID": {
						"type": "string",
						"description": "ID of disruption [StoerungsID]."
					},
					"displayPriority": {
						"type": "integer",
						"description": "Display priority [Anzeigereihenfolge] for disruption. Order is by display priority asc. May be empty.",
						"format": "int32"
					},
					"descriptions": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/DisruptionCommunicationDescription"
						},
						"description": "Textual short description of disruption by language identifier."
					}
				},
				"description": "Embedded disruption communication information [Stoerungskommunikation]."
			},
			"JourneySegmentBased": {
				"required": [
					"destinationSchedule",
					"journeyID",
					"originSchedule"
				],
				"type": "object",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"originSchedule": {
						"$ref": "#/components/schemas/StationShort"
					},
					"destinationSchedule": {
						"$ref": "#/components/schemas/StationShort"
					},
					"journeyCanceled": {
						"type": "boolean",
						"description": "Flag that indicates whether whole journey has been canceled."
					},
					"continuationFor": {
						"$ref": "#/components/schemas/TransportPublicOrigin"
					},
					"continuationBy": {
						"$ref": "#/components/schemas/TransportPublicDestination"
					},
					"disruptions": {
						"type": "array",
						"description": "List of disruptions [Stoerungsinformationen] for whole journey.",
						"items": {
							"$ref": "#/components/schemas/DisruptionCommunicationEmbedded"
						}
					},
					"segments": {
						"type": "array",
						"description": "List of segments [Fahrtabschnitte].",
						"items": {
							"$ref": "#/components/schemas/Segment"
						}
					},
					"segmentsCanceled": {
						"type": "array",
						"description": "List of canceled segments [Fahrtabschnitte].",
						"items": {
							"$ref": "#/components/schemas/SegmentCanceled"
						}
					}
				},
				"description": "Segment based [Fahrtabschnittsbasiert] information for a particular journey [Fahrtverlauf]."
			},
			"Message": {
				"required": [
					"text",
					"type"
				],
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Unique code of message may be empty in case of HIM based messages."
					},
					"type": {
						"$ref": "#/components/schemas/MessageType"
					},
					"displayPriority": {
						"type": "integer",
						"description": "Display priority [Anzeigereihenfolge] for message. Order is by display priority asc. May be empty.",
						"format": "int32"
					},
					"category": {
						"type": "string",
						"description": "Optional category of message, like for instance 'Bauarbeiten' or 'Informationen'"
					},
					"text": {
						"type": "string",
						"description": "Freetext of message."
					},
					"textShort": {
						"type": "string",
						"description": "Short freetext of message, may be empty."
					}
				},
				"description": "Message for customers and or employees, depends on type."
			},
			"MessageType": {
				"type": "string",
				"description": "Classification of message.\n- CUSTOMER_TEXT (?)\n- QUALITY_VARIATION (?)\n- CUSTOMER_REASON (?)",
				"enum": [
					"CUSTOMER_TEXT",
					"QUALITY_VARIATION",
					"CUSTOMER_REASON"
				]
			},
			"Segment": {
				"required": [
					"additional",
					"administration",
					"arrival",
					"canceled",
					"departure",
					"transport"
				],
				"type": "object",
				"properties": {
					"administration": {
						"$ref": "#/components/schemas/Administration"
					},
					"transport": {
						"$ref": "#/components/schemas/TransportPublic"
					},
					"additional": {
						"type": "boolean",
						"description": "Indicates whether this segment is additional, meaning not be part of the regular schedule."
					},
					"canceled": {
						"type": "boolean",
						"description": "Indicates whether this segment has been canceled."
					},
					"reliefFor": {
						"type": "array",
						"description": "List of transports this journey at this particular segment reliefs for [Entlastungszug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"reliefBy": {
						"type": "array",
						"description": "List of transports this journey at this particular segment is reliefed by [Entlastungszug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"replacementFor": {
						"type": "array",
						"description": "List of transports this journey at this particular segment replaces [Ersatzzug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"replacedBy": {
						"type": "array",
						"description": "List of transports this journey at this particular segment is replaced by [Ersatzzug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"travelsWith": {
						"type": "array",
						"description": "List of journeys this journey at this particular segment travels with [Traktionen].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"departure": {
						"$ref": "#/components/schemas/Departure"
					},
					"arrival": {
						"$ref": "#/components/schemas/Arrival"
					}
				},
				"description": "Journey segment information on departure and arrival [Fahrtabschnitt]."
			},
			"SegmentCanceled": {
				"required": [
					"additional",
					"administration",
					"arrival",
					"canceled",
					"departure",
					"scheduledBeforeDepartureID",
					"transport"
				],
				"type": "object",
				"properties": {
					"administration": {
						"$ref": "#/components/schemas/Administration"
					},
					"transport": {
						"$ref": "#/components/schemas/TransportPublic"
					},
					"additional": {
						"type": "boolean",
						"description": "Indicates whether this segment is additional, meaning not be part of the regular schedule."
					},
					"canceled": {
						"type": "boolean",
						"description": "Indicates whether this segment has been canceled."
					},
					"reliefFor": {
						"type": "array",
						"description": "List of transports this journey at this particular segment reliefs for [Entlastungszug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"reliefBy": {
						"type": "array",
						"description": "List of transports this journey at this particular segment is reliefed by [Entlastungszug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"replacementFor": {
						"type": "array",
						"description": "List of transports this journey at this particular segment replaces [Ersatzzug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"replacedBy": {
						"type": "array",
						"description": "List of transports this journey at this particular segment is replaced by [Ersatzzug].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"travelsWith": {
						"type": "array",
						"description": "List of journeys this journey at this particular segment travels with [Traktionen].",
						"items": {
							"$ref": "#/components/schemas/TransportPublicDestination"
						}
					},
					"departure": {
						"$ref": "#/components/schemas/Departure"
					},
					"arrival": {
						"$ref": "#/components/schemas/Arrival"
					},
					"scheduledBeforeDepartureID": {
						"type": "string",
						"description": "References to departure ID this segment was positioned before. May reference to a canceled segment as well and may be empty in case of destination."
					}
				},
				"description": "Reflects a canceled segment."
			},
			"StationShort": {
				"required": [
					"evaNumber",
					"name"
				],
				"type": "object",
				"properties": {
					"evaNumber": {
						"type": "string",
						"description": "Eva number of station."
					},
					"name": {
						"type": "string",
						"description": "Name for station in fixed language."
					}
				},
				"description": "Comprehensive station [Bahnhof] information."
			},
			"StopAtStation": {
				"required": [
					"canceled",
					"evaNumber",
					"name"
				],
				"type": "object",
				"properties": {
					"evaNumber": {
						"type": "string",
						"description": "Eva number of station."
					},
					"name": {
						"type": "string",
						"description": "Name for station in fixed language."
					},
					"canceled": {
						"type": "boolean",
						"description": "Indicates whether the stop ie departure / arrival has been canceled [Haltausfall]."
					}
				},
				"description": "Stop at a particular station [Bahnhof] for arrival / departure boards."
			},
			"TimeType": {
				"type": "string",
				"description": "Specifies whether 'time' is based on schedule or preview.\n- SCHEDULE (Time source is schedule)\n- PREVIEW (Time source is preview / forecast)\n- REAL (Time source is real)",
				"enum": [
					"SCHEDULE",
					"PREVIEW",
					"REAL"
				]
			},
			"TransportPublic": {
				"required": [
					"category",
					"number",
					"type"
				],
				"type": "object",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/TransportType"
					},
					"category": {
						"type": "string",
						"description": "Code of the transport [Fahrtgattung]."
					},
					"number": {
						"type": "integer",
						"description": "Number of the transport [Fahrtnummer].",
						"format": "int32"
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing - or product name of the transport, for instance 'Sprinter' or 'Schwarzwaldexpress' etc. [Marketing Name / Produkt Name]."
					}
				},
				"description": "Public transport description for all types of trains, buses, subways, trams etc."
			},
			"TransportPublicDestination": {
				"required": [
					"category",
					"destination",
					"journeyID",
					"number",
					"type"
				],
				"type": "object",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/TransportType"
					},
					"category": {
						"type": "string",
						"description": "Code of the transport [Fahrtgattung]."
					},
					"number": {
						"type": "integer",
						"description": "Number of the transport [Fahrtnummer].",
						"format": "int32"
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing - or product name of the transport, for instance 'Sprinter' or 'Schwarzwaldexpress' etc. [Marketing Name / Produkt Name]."
					},
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"destination": {
						"$ref": "#/components/schemas/StopAtStation"
					},
					"differingDestination": {
						"$ref": "#/components/schemas/StopAtStation"
					}
				},
				"description": "Public transport [Oeffentlicher Transport] with (scheduled) destination [Ziel] and differing destination in case the final stop of the journey changed [Haltausfall, Laufwegverlängerung, ...]."
			},
			"TransportPublicOrigin": {
				"required": [
					"category",
					"journeyID",
					"number",
					"origin",
					"type"
				],
				"type": "object",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/TransportType"
					},
					"category": {
						"type": "string",
						"description": "Code of the transport [Fahrtgattung]."
					},
					"number": {
						"type": "integer",
						"description": "Number of the transport [Fahrtnummer].",
						"format": "int32"
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing - or product name of the transport, for instance 'Sprinter' or 'Schwarzwaldexpress' etc. [Marketing Name / Produkt Name]."
					},
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"origin": {
						"$ref": "#/components/schemas/StopAtStation"
					},
					"differingOrigin": {
						"$ref": "#/components/schemas/StopAtStation"
					}
				},
				"description": "Public transport [Oeffentlicher Transport] with origin [Herkunft]."
			},
			"TransportType": {
				"type": "string",
				"description": "Type of transport.\n- HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.)\n- INTERCITY_TRAIN (Inter city train [Intercityzug])\n- INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug])\n- REGIONAL_TRAIN (Regional train [Regionalzug])\n- CITY_TRAIN (City train [S-Bahn])\n- SUBWAY (Subway [U-Bahn])\n- TRAM (Tram [Strassenbahn])\n- BUS (Bus [Bus])\n- FERRY (Ferry [Faehre])\n- FLIGHT (Flight [Flugzeug])\n- CAR (Car [Auto])\n- TAXI (Taxi)\n- SHUTTLE (Shuttle [Ruftaxi])\n- BIKE ((E-)Bike [Fahrrad])\n- SCOOTER ((E-)Scooter [Roller])\n- WALK (Walk ([Laufen])\n- UNKNOWN (Unknown)",
				"enum": [
					"HIGH_SPEED_TRAIN",
					"INTERCITY_TRAIN",
					"INTER_REGIONAL_TRAIN",
					"REGIONAL_TRAIN",
					"CITY_TRAIN",
					"SUBWAY",
					"TRAM",
					"BUS",
					"FERRY",
					"FLIGHT",
					"CAR",
					"TAXI",
					"SHUTTLE",
					"BIKE",
					"SCOOTER",
					"WALK",
					"UNKNOWN"
				]
			},
			"DepartureMatch": {
				"required": [
					"departureID",
					"journeyID",
					"station",
					"time",
					"timeSchedule",
					"timeType"
				],
				"type": "object",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"departureID": {
						"type": "string",
						"description": "ID of departure [AbfahrtID]"
					},
					"station": {
						"$ref": "#/components/schemas/StationShort"
					},
					"timeSchedule": {
						"type": "string",
						"description": "Scheduled time [Soll] of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"timeType": {
						"$ref": "#/components/schemas/TimeType"
					},
					"time": {
						"type": "string",
						"description": "Best known time information of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"platformSchedule": {
						"type": "string",
						"description": "Scheduled platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"platform": {
						"type": "string",
						"description": "Actual platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					}
				},
				"description": "Departure [Abfahrt] match."
			},
			"DepartureMatches": {
				"required": [
					"departures"
				],
				"type": "object",
				"properties": {
					"departures": {
						"type": "array",
						"description": "Matched departures.",
						"items": {
							"$ref": "#/components/schemas/DepartureMatch"
						}
					}
				},
				"description": "List of possible departure [Abfahrt] matches."
			},
			"JourneyMatch": {
				"required": [
					"administrationID",
					"date",
					"destinationSchedule",
					"journeyID",
					"originSchedule",
					"transport"
				],
				"type": "object",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"date": {
						"type": "string",
						"description": "Date of scheduled start departure of journey [Verkehrstag].",
						"format": "date"
					},
					"originSchedule": {
						"$ref": "#/components/schemas/StationShort"
					},
					"destinationSchedule": {
						"$ref": "#/components/schemas/StationShort"
					},
					"transport": {
						"$ref": "#/components/schemas/TransportPublic"
					},
					"administrationID": {
						"type": "string",
						"description": "Unique id for administration [Verwaltung]."
					}
				},
				"description": "Journey [Fahrt] match."
			},
			"JourneyMatches": {
				"required": [
					"journeys"
				],
				"type": "object",
				"properties": {
					"journeys": {
						"type": "array",
						"description": "Matched journeys.",
						"items": {
							"$ref": "#/components/schemas/JourneyMatch"
						}
					}
				},
				"description": "List of possible journey [Fahrt] matches."
			},
			"ArrivalMatch": {
				"required": [
					"arrivalID",
					"journeyID",
					"station",
					"time",
					"timeSchedule",
					"timeType"
				],
				"type": "object",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"arrivalID": {
						"type": "string",
						"description": "ID of arrival [AnkunftID]"
					},
					"station": {
						"$ref": "#/components/schemas/StationShort"
					},
					"timeSchedule": {
						"type": "string",
						"description": "Scheduled time [Soll] of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"timeType": {
						"$ref": "#/components/schemas/TimeType"
					},
					"time": {
						"type": "string",
						"description": "Best known time information of stop as fully qualified date (for instance '2019-08-19T12:56:14+02:00' or '2019-08-19T10:56:14Z').",
						"format": "date-time"
					},
					"platformSchedule": {
						"type": "string",
						"description": "Scheduled platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"platform": {
						"type": "string",
						"description": "Actual platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					}
				},
				"description": "Arrival [Abfahrt] match."
			},
			"ArrivalMatches": {
				"required": [
					"arrivals"
				],
				"type": "object",
				"properties": {
					"arrivals": {
						"type": "array",
						"description": "Matched arrivals.",
						"items": {
							"$ref": "#/components/schemas/ArrivalMatch"
						}
					}
				},
				"description": "List of possible arrival [Ankunft] matches."
			}
		},
		"securitySchemes": {
			"ApiKeyAuth": {
				"type": "apiKey",
				"name": "DB-Api-Key",
				"in": "header",
				"scheme": "ApiKeyAuth"
			}
		}
	}
}